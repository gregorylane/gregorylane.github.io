text(-0.5,row, slimtext, cex=1.5, pos=2)
} else{
text(-0.5,row, bquote(bold(.(slimtext))), cex=1.5, pos=2)
}
for(treatnum in 1){
treatname = c("work")[treatnum]
beta = df[i,paste0(treatname,"_b")]
se = df[i,paste0(treatname,"_se")]
scaler = ifelse(abs(beta/se) > 1.95, 0.6, 0.2)
points(beta, row, pch=19, col=alpha(cols[treatnum], scaler), cex=2)
points(c(beta-se*1.96, beta+se*1.96), c(row, row), type="o", pch="|", col=alpha(cols[treatnum], scaler))
}
}
axis(1, at=seq(-0.4, 0.8, 0.2), cex.axis=1.4)
mtext(text="Work vs. Cash", side=3 , adj = 0.73)
dev.off()
###############
# PM+ coefficient panels
# Tilman Graff
# 2019-09-18
# Update: 9/18/2021 by GL; Change graph to report only work vs. cash point estimates
###############
### Greg notes to self
# Need to figure out what the .dta input format looked like
#   Columns it needs to have -
#         Variable name "variable' - note, it looks like their code removes lots of latex formatting from this
#         treatname,"_b"
#         treatname,"_se"
#Notes:
# They creates two panels - we don't need this, so can ignore the "prim" and "sec" parts
# They create  coefficient categories (both numeric and with label - they do this by searching for /hspace),
# since were not importing that, I think we can just create this manually?
# It looks like the category "headers" don't have \\hspace, all others do
# - If want to have just a title, then put NA for betas / se
###############
# Preamble
###############
rm(list = ls())
#install.packages("readstata13")
#install.packages("scales")
require(readstata13)
require(scales)
###############
# Manually Input Coefficeints
###############
#Orgqnzie so that each category starts a new line
variable <- c("Psychosocial Wellbeing", "Psychosocial Index \\hspace", "PHQ-9 \\hspace","Cohen stress scale \\hspace", "Life Satisfaction \\hspace", "Sociability \\hspace", "Self Worth \\hspace", "Locus of Control \\hspace", "Stability \\hspace",
"Health", "Days Sick \\hspace",
"Cognitive Performance", "Cognitive Index \\hspace", "Math Score \\hspace", "Digit Span \\hspace",
"Preferences", "Risk Aversion \\hspace", "Time Preference \\hspace",
"Gender", "Household Power Index \\hspace", "Work Rights Index \\hspace",
"Consumption", "Savings \\hspace", "Loan Repayment \\hspace", "Necessary Goods \\hspace", "Luxury Goods \\hspace")
work_b <- c(NA, 0.152, 0.238, 0.192, 0.055, 0.089, 0.226, 0.199, 0.190, #NOTE: HAVE CHANGED SIGN OF PHQ AND STRESS FOR TABLE
NA, -0.161, #NOTE: these are standarized - so don't match table outcome which are in levels
NA, 0.178, 0.094, 0.246,
NA, -0.232, -0.017,
NA, -0.029, 0.118,
NA, 0.231, 0.048, 0.043, 0.126) #NOTE SWITCHED SIGN ON DEBT AND DEFINED AS LOAN REPAYMENT
work_se <- c(NA, 0.043, 0.084, 0.078, 0.065, 0.083, 0.072, 0.088, 0.085,
NA, 0.078,
NA, 0.062, 0.074, 0.066,
NA, 0.096, 0.081,
NA, 0.067, 0.070,
NA, 0.173, 0.094, .110, 0.088)
coefs <- data.frame(variable, work_b, work_se)
# primary = read.dta13(paste0("/Users/magda/Box Sync/_Busara Field/_Project Folders (Internal)/Shapiro Cash vs Stuff/Mental health PM Plus/11_Analysis/temp/eststorage_z-scored-prim.dta"))
# primary$panel = "prim"
#
# seconday = read.dta13(paste0("/Users/tilman/Box Sync/_Busara Field/_Project Folders (Internal)/Shapiro Cash vs Stuff/Mental health PM Plus/11_Analysis/temp/eststorage_z-scored-sec.dta"))
# seconday$panel = "sec"
#
# coefs = rbind(primary, seconday)
###############
# Split coefficients by category
###############
cat = 0
for(i in 1:nrow(coefs)){
if(!grepl("\\hspace", coefs$variable[i])){
cat = cat+1
coefs[i,"cat"] = cat
}else{
coefs[i,"cat"] = cat
}
}
coefs$catname = c("mental", "health", "cognitive", "preference", "gender", "consumption")[coefs$cat]
###############
# Draw Primary and Secondary Panels
###############
#Work
df <- coefs
pdf(paste0("~/Dropbox/Projects/Bangladesh_Idleness/paper/figures/prim_panel_split_2.pdf"), width = 16, height = 9)
layout(matrix(c(1,1,2), nrow = 1, ncol = 3, byrow = TRUE))
par(mai = c(1, 0.15, 0.15, 0.15), oma=c(1.5,1.5,1.5,.5))
df$order = 99
df[df$catname=="mental","order"] = 1
df[df$catname=="health","order"] = 2
df[df$catname=="preference","order"] = 3
df[df$catname=="cognitive","order"] = 4
df[df$catname=="gender","order"] = 5
df[df$catname=="consumption","order"] = 6
df = df[order(df$order),]
number_rows = nrow(df)
cols = c("blue")
plot(1,1, type='n', bty='n', axes=F, ylab="", ylim=c(0.5,number_rows), xlim=range(c(-2,0.8)), xlab="")
abline(v=0, lty=2)
for(i in 1:nrow(df)){
row = nrow(df)+1 - i
boldmarker = ifelse(grepl("\\hspace", df$variable[i]), 0, 1)
slimtext = gsub("\\\\hspace", "", df$variable[i])
slimtext = gsub("\\$", "", slimtext)
slimtext = paste0(toupper(substr(slimtext, 1, 1)), tolower(substr(slimtext, 2, 1000)))
if(grepl("Phq9", slimtext)){
slimtext = "PHQ-9"
}
if(grepl("stress", slimtext)){
slimtext = "Cohen Stress Scale"
}
if(boldmarker == 0){
text(-0.5,row, slimtext, cex=1.5, pos=2)
} else{
text(-0.5,row, bquote(bold(.(slimtext))), cex=1.5, pos=2)
}
for(treatnum in 1){
treatname = c("work")[treatnum]
beta = df[i,paste0(treatname,"_b")]
se = df[i,paste0(treatname,"_se")]
scaler = ifelse(abs(beta/se) > 1.95, 0.6, 0.2)
points(beta, row, pch=19, col=alpha(cols[treatnum], scaler), cex=2)
points(c(beta-se*1.96, beta+se*1.96), c(row, row), type="o", pch="|", col=alpha(cols[treatnum], scaler))
}
}
axis(1, at=seq(-0.4, 0.8, 0.2), cex.axis=1.4)
mtext(text="Work vs. Cash", side=3 , adj = 0.73)
dev.off()
---
title: "Loan Data Results"
author: "Gregory Lane"
date: "March 19, 2018"
output:
pdf_document: default
html_document:
df_print: paged
---
```{r echo=F, message=FALSE, warning=FALSE, messages=F, paged.print=FALSE}
#Updated on May 17th 2021: Per R&R, remove district FE
# setup ----------------------------------------------------------------------
# how to save stargazer output: writeLines(capture.output(stargazer(DF)), filename.tex)
# or use the out = "path/filename" option in stargazer
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,stargazer, pander, ggthemes, ggplot2, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10") #have stupid ludbridate read so don't get error
rm(temp)
dir_data <- '~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/'
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,stargazer, pander, ggthemes, ggplot2, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10") #have stupid ludbridate read so don't get error
rm(temp)
dir_data <- '~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/'
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modified/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
#Load pre-saved R dabi-disbursals b/c raw data takes long time to produce
load("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/dabi_disbursals")
#Setup
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl,
stringr, lfe, psych,stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10") #have stupid ludbridate read so don't get error
rm(temp)
dir_data <- '~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/'
#Load data for Dabi disbursals
load("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/dabi_disbursals")
#Keep only pre-RCT data
disburse %<>% filter(active_rct==0, !is.na(loanno)) %>%
mutate(late = lnstatus_end > 1,
principalamt2 = winsor(principalamt, trim=0.01, na.rm=TRUE))
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_1)
#cut down size of data
disburse %<>% select(-memage, -setupdate, -status, -projectcode, -loanno, -loanslno, -productno, -schmcode,
-week_disb, -id, -lnstatus_end)
# merge in creditscore
creditscore_2016 <- read.dta13("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Creditscore/credit_score_2016.dta")
creditscore_2016 %<>% rename(orgno = vo_id, orgmemno = brac_id) %>% select(-score_source)
disburse <- merge(disburse, creditscore_2016, by = c("hchyid", "orgno", "orgmemno"), all.x=TRUE)
#Keep only pre-RCT data
disburse %<>% filter(active_rct==0, !is.na(loanno)) %>%
mutate(late = lnstatus_end > 1,
principalamt2 = winsor(principalamt, trim=0.01, na.rm=TRUE))
#Keep only pre-RCT data
disburse %<>% filter(active_rct==0, !is.na(loanno)) %>%
mutate(late = lnstatus_end > 1,
principalamt2 = winsor(principalamt, trim=0.01, na.rm=TRUE))
#####
# Loan Branch balance
#author: "Gregory Lane"
#date: "June 3, 2020"
######
#Setup
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl,
stringr, lfe, psych,stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10") #have stupid ludbridate read so don't get error
rm(temp)
dir_data <- '~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/'
#Load data for Dabi disbursals
load("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/dabi_disbursals")
#cut down size of data
disburse %<>% select(-memage, -setupdate, -status, -projectcode, -loanno, -loanslno, -productno, -schmcode,
-week_disb, -id)
# merge in creditscore
creditscore_2016 <- read.dta13("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Creditscore/credit_score_2016.dta")
creditscore_2016 %<>% rename(orgno = vo_id, orgmemno = brac_id) %>% select(-score_source)
disburse <- merge(disburse, creditscore_2016, by = c("hchyid", "orgno", "orgmemno"), all.x=TRUE)
#Keep only pre-RCT data
disburse %<>% filter(active_rct==0, !is.na(loanno)) %>%
mutate(late = lnstatus_end > 1,
principalamt2 = winsor(principalamt, trim=0.01, na.rm=TRUE))
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_1)
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
#Keep only pre-RCT data
disburse %<>% filter(active_rct==0) %>%
mutate(late = lnstatus_end > 1,
principalamt2 = winsor(principalamt, trim=0.01, na.rm=TRUE))
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_1)
bal_2 <- felm(late ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_2)
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2),
sd_princ = sd(principalamt2))
View(sum_stats)
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2, na.rm=T),
sd_princ = sd(principalamt2, na.rm=T))
View(sum_stats)
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2, na.rm=T),
sd_princ = sd(principalamt2, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T)
)
View(sum_stats)
summary(bal_1)
View(bal_1)
View(bal_2)
p_1 <- bal_1$cpval[2]
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2, na.rm=T),
sd_princ = sd(principalamt2, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T)
) %>%
filter(!is.na(treatment))
View(sum_stats)
sum_stats %<>% mutate(p_val = c(p_1, p_2))
p_2 <- bal_2$cpval[2]
sum_stats %<>% mutate(p_val = c(p_1, p_2))
View(sum_stats)
View(sum_stats)
sum_stats %<>% mutate(p_val_princ = c(p_1, 0), p_val_late = c(p_2, 0))
names(disburse)
p_vals <- c(p_1, " ", p_2, " ", p_3, " ")
p_3 <- bal_3$cpval[2]
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_3)
p_3 <- bal_3$cpval[2]
p_vals <- c(p_1, " ", p_2, " ", p_3, " ")
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse)
summary(bal_3)
p_3 <- bal_3$cpval[2]
#regs
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse)
summary(bal_1)
p_1 <- bal_1$cpval[2]
bal_2 <- felm(late ~ treatment |
0 | 0 | hchyid,
data = disburse)
summary(bal_2)
p_2 <- bal_2$cpval[2]
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse)
summary(bal_3)
p_3 <- bal_3$cpval[2]
p_vals <- c(p_1, " ", p_2, " ", p_3, " ")
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2, na.rm=T),
sd_princ = sd(principalamt2, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_score = mean(credit_score, na.rm=T),
sd_score = sd(credit_score, na.rm=T))) %>%
filter(!is.na(treatment))
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2, na.rm=T),
sd_princ = sd(principalamt2, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_score = mean(credit_score, na.rm=T),
sd_score = sd(credit_score, na.rm=T)) %>%
filter(!is.na(treatment))
#regs
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(el_eligibl==1))
summary(bal_1)
p_1 <- bal_1$cpval[2]
bal_2 <- felm(late ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(el_eligibl==1))
summary(bal_2)
p_2 <- bal_2$cpval[2]
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(el_eligibl==1))
summary(bal_3)
p_3 <- bal_3$cpval[2]
p_vals <- c(p_1, " ", p_2, " ", p_3, " ")
View(sum_stats)
gs
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(el_eligible==1))
summary(bal_1)
p_1 <- bal_1$cpval[2]
bal_2 <- felm(late ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(el_eligible==1))
summary(bal_2)
p_2 <- bal_2$cpval[2]
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(el_eligible==1))
summary(bal_3)
p_3 <- bal_3$cpval[2]
p_vals <- c(p_1, " ", p_2, " ", p_3, " ")
names(disburse)
#regs
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_1)
p_1 <- bal_1$cpval[2]
bal_2 <- felm(late ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_2)
p_2 <- bal_2$cpval[2]
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_3)
p_3 <- bal_3$cpval[2]
p_vals <- c(p_1, " ", p_2, " ", p_3, " ")
names(disburse)
rm(disburse)
#Load other data - note, only have transacitons beginning of RCT period, so can't check for on time payment rates
load(paste0(dir_data, "analysis_loan_data.RData"))
head(loans)
summar(loans)
summary(loans)
table(loans$year, loans$month)
loans %<>% select(hchyid, district, num_elig, savbalan, year, month, treatment) %>% filter(year==2016, month==5)
bal_4 <- felm(num_elig ~ treatment |
0 | 0 | hchyid,
data = loans)
summary(loans)
bal_4 <- felm(savbalan ~ treatment |
0 | 0 | hchyid,
data = loans)
summary(bal_4)
#Load other data - note, only have transacitons beginning of RCT period, so can't check for on time payment rates
load(paste0(dir_data, "analysis_loan_data.RData"))
#select vars and keep pre-RCT data
loans %<>% select(hchyid, district, num_elig, savbalan, year, month, treatment) %>% filter(year==2016)
bal_4 <- felm(num_elig ~ treatment |
0 | 0 | hchyid,
data = loans)
summary(bal_4)
p_4 <- bal_4$cpval[2]
loans %>% filter(year==2016, month==5)
bal_5 <- felm(savbalan ~ treatment |
0 | 0 | hchyid,
data = loans)
summary(bal_5)
p_5 <- bal_5$cpval[2]
#Load other data - note, only have transacitons beginning of RCT period, so can't check for on time payment rates
load(paste0(dir_data, "analysis_loan_data.RData"))
#select vars and keep pre-RCT data
loans %<>% select(hchyid, district, num_elig, savbalan, year, month, treatment) %>% filter(year==2016)
summary(loans)
#Load other data - note, only have transacitons beginning of RCT period, so can't check for on time payment rates
load(paste0(dir_data, "analysis_loan_data.RData"))
#select vars and keep pre-RCT data
temp <- loans %>% group_by(hchyid) %>% summary(num_elig = mean(num_elig, na.rm=T))
bal_4 <- felm(num_elig ~ treatment |
0 | 0 | hchyid,
data = temp)
summary(bal_4)
p_4 <- bal_4$cpval[2]
summary(temp)
#select vars and keep pre-RCT data
temp <- loans %>% group_by(hchyid) %>% summary(num_elig = mean(num_elig, na.rm=T), treatment = max(treatment, na.rm=T))
#select vars and keep pre-RCT data
temp <- loans %>% group_by(hchyid) %>% summarise(num_elig = mean(num_elig, na.rm=T), treatment = max(treatment, na.rm=T))
View(temp)
bal_4 <- felm(num_elig ~ treatment |
0 | 0 | hchyid,
data = temp)
View(temp)
bal_4 <- felm(num_elig ~ treatment |
0 | 0 | 0,
data = temp)
View(temp)
#####
# Loan Branch balance
#author: "Gregory Lane"
#date: "June 3, 2020"
######
#Setup
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl,
stringr, lfe, psych,stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10") #have stupid ludbridate read so don't get error
rm(temp)
dir_data <- '~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/'
#Load data for Dabi disbursals
load("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/dabi_disbursals")
#cut down size of data
disburse %<>% select(-memage, -setupdate, -status, -projectcode, -loanslno, -productno, -schmcode,
-week_disb, -id)
# merge in creditscore
creditscore_2016 <- read.dta13("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Creditscore/credit_score_2016.dta")
creditscore_2016 %<>% rename(orgno = vo_id, orgmemno = brac_id) %>% select(-score_source)
disburse <- merge(disburse, creditscore_2016, by = c("hchyid", "orgno", "orgmemno"), all.x=TRUE)
#Keep only pre-RCT data
disburse %<>% filter(active_rct==0) %>%
mutate(late = lnstatus_end > 1,
principalamt2 = winsor(principalamt, trim=0.01, na.rm=TRUE))
# Create summary stats by group
sum_stats <- disburse %>% group_by(treatment) %>% summarise(mean_princ = mean(principalamt2, na.rm=T),
sd_princ = sd(principalamt2, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_late = mean(late, na.rm=T),
sd_late = sd(late, na.rm=T),
mean_score = mean(credit_score, na.rm=T),
sd_score = sd(credit_score, na.rm=T)) %>%
filter(!is.na(treatment))
#regs
bal_1 <- felm(principalamt2 ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_1)
p_1 <- bal_1$cpval[2]
bal_2 <- felm(late ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_2)
p_2 <- bal_2$cpval[2]
bal_3 <- felm(credit_score ~ treatment |
0 | 0 | hchyid,
data = disburse %>% filter(eligible==1))
summary(bal_3)
p_3 <- bal_3$cpval[2]
temp <-disburse %>% filter(year==2016) %>% mutate(elig = credit_score >77) %>% group_by(hchyid) %>%
summarise(num_elig = sum(elig))
bal_4 <- felm(num_elig ~ treatment |
0 | 0 | 0,
data = temp)
summary(bal_4)
p_4 <- bal_4$cpval[2]
View(temp)
View(temp)
names(disburse)
setwd("~/Documents/Website/gregorylane.github.io")
rmarkdown::render_site()
