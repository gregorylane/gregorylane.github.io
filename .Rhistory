job_level = jobrolelevel,
job_type = jobroletype,
placement = 'placement status',
certified = cerified) %>%
mutate(STOBC = caste %in% c('ST', 'OBC'),
male = gender == 'Male',
grade = gsub(grade ,pattern="Grade ", replacement=""),
hindu = religion=="Hinduism",
passed = result=="Pass",
start_date = as.POSIXct(start_date),
end_date = as.POSIXct(end_date),
test_date = as.POSIXct(test_date),
trainer_gender = trainer_gender == 'Male', #NOTE: there are transgender trainers, but keep binary for now
placement = placement=="Yes",
certified = certified=="Yes",
monthlyincome = as.numeric(monthlyincome)) %>% #Note: need to fix education, but need years equivalents
select(-c(caste, gender, religion, result))
#sectors
sector <- workers %>% group_by(sectorid, certified) %>%
summarise(max_score = max(total_score),
min_score = min(total_score),
avg_score = mean(total_score),
name = first(sectorname),
count = n())
#this looks close, but not consistent - some sectors with min certified scores below max non-certified
#doesn't work with subsector either
#filter sectors that don't have many obs (<500)
workers %<>% group_by(sectorid) %>% mutate(obs = n()) %>% filter(obs > 200)
ggplot(workers %>% filter(subsectorid==5), aes(x = total_score)) +
geom_histogram(data =workers %>% filter(certified==TRUE, subsectorid==5) , binwidth = 5, alpha=0.4, fill="red") +
geom_histogram(data =workers %>% filter(certified==FALSE, subsectorid==5, total_score!=0) , binwidth = 5, alpha=0.4, fill="blue") +
ggtitle("Electronics & Hardware (red = certified, blue = not certified")
ggplot(workers %>% filter(subsectorid==49), aes(x = total_score)) +
geom_histogram(data =workers %>% filter(certified==TRUE, subsectorid==49) , binwidth = 10, alpha=0.4, fill="red") +
geom_histogram(data =workers %>% filter(certified==FALSE, subsectorid==49, total_score!=0) , binwidth = 10, alpha=0.4, fill="blue") +
ggtitle("Beauty and Wellness (red = certified, blue = not certified)")
ggplot(workers %>% filter(subsectorid==14), aes(x = total_score)) +
geom_histogram(data =workers %>% filter(certified==TRUE, subsectorid==14) , binwidth = 10, alpha=0.4, fill="red") +
geom_histogram(data =workers %>% filter(certified==FALSE, subsectorid==14, total_score!=0) , binwidth = 10, alpha=0.4, fill="blue") +
ggtitle("Tourism (red = certified, blue = not certified)")
ggplot(workers %>% filter(subsectorid==11), aes(x = total_score)) +
geom_histogram(data =workers %>% filter(certified==TRUE, subsectorid==11) , binwidth = 10, alpha=0.4, fill="red") +
geom_histogram(data =workers %>% filter(certified==FALSE, subsectorid==11, total_score!=0) , binwidth = 10, alpha=0.4, fill="blue") +
ggtitle("Retail (red = certified, blue = not certified)")
rd_data <- filter(workers, subsectorid %in% c(9, 68, 49, 14, 13))
#grab min qualifying score as threshold - assume that non-certified above that threshold didn't pass for other reason
#this is big assumption, which we should check with NSDC
rd_data <- left_join(rd_data,
rd_data %>% group_by(subsectorid, certified) %>%
summarise(threshold = min(total_score)) %>% ungroup() %>%
filter(certified==TRUE) %>% select(-certified),
by = 'subsectorid') %>%
mutate(running = total_score - threshold, above = running > 0, above_run = above * running)
#plot combined distribution of running variable around threshold - this looks good
ggplot(rd_data %>% filter(total_score!=0), aes(x = running)) +
geom_histogram(binwidth = 5, alpha=0.6) +
geom_vline(xintercept=0, colour="gray") +
ggtitle('Combined Centered Scores') +
xlab("Centered Test Score")
library(rdrobust)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
rdbwselect(y = as.numeric(certified), x = running, c = 0 , fuzzy = TRUE, p =3 )
rm(list = ls())
options(stringsAsFactors = FALSE)
library(tidyverse)
library(magrittr)
library(foreign)
library(readxl)
library(lubridate)
library(ggplot2)
library(lfe)
library(rdrobust)
if(Sys.info()["user"] == "erinmkelley") {
setwd("~/Dropbox/NSDC/Data Acquisition/sample")
data <- read_excel("20171129_Sep2016Aug2017.xlsx")
}
if(Sys.info()["user"] == "gregorylane") {
setwd("~/Dropbox/Berkeley/Research/NSDC/Data Acquisition/")
data <- read_excel("sample/20171129_Sep2016Aug2017.xlsx")
}
# clean data ----------------------------------------
names(data) %<>% tolower
#keep only vars that seem to be useful (for first pass)
workers <- data %>% select(candid, castecategory, educationattained, gender, grade, religion,
result, 'total theory marks', 'total practical marks',
totalmarkobtained, batchid, 'batch start date', 'batch end date',
'assessment date', trainerid, trainergender, centreid,
jobroleid, jobrole, jobrolelevel, jobroletype,
sectorid, sectorname, subsectorid, subsectorname, assessmentstatus,
statecode, district, 'placement status', cerified, monthlyincome, yearofbirth)
#rename & clean-up
workers %<>% rename(id = candid,
caste = castecategory,
eduction = educationattained,
theory_score = 'total theory marks',
practical_score = 'total practical marks',
total_score = totalmarkobtained,
start_date = 'batch start date',
end_date = 'batch end date',
test_date ='assessment date',
trainer_id = trainerid,
trainer_gender = trainergender,
center_id = centreid,
job_id = jobroleid,
job_level = jobrolelevel,
job_type = jobroletype,
placement = 'placement status',
certified = cerified) %>%
mutate(STOBC = caste %in% c('ST', 'OBC'),
male = gender == 'Male',
grade = gsub(grade ,pattern="Grade ", replacement=""),
hindu = religion=="Hinduism",
passed = result=="Pass",
start_date = as.POSIXct(start_date),
end_date = as.POSIXct(end_date),
test_date = as.POSIXct(test_date),
month = month(test_date),
year = year(test_date),
trainer_gender = trainer_gender == 'Male', #NOTE: there are transgender trainers, but keep binary for now
placement = placement=="Yes",
certified = certified=="Yes",
monthlyincome = as.numeric(monthlyincome)) %>% #Note: need to fix education, but need years equivalents
select(-c(caste, gender, religion, result))
educ_mat <- as.data.frame(cbind(unique(as.character(workers$eduction)),
as.vector(c(10, 20, 18, 12, 8, 16, 12, 10, 4, 14))))
#Note: need to fix education - need years equivalents of categories (these are guesses)
workers %<>% merge(y = educ_mat, by.x = "eduction", by.y = "V1", all=TRUE) %>%
select(-eduction) %>% rename(years_educ = V2) %>% mutate(years_educ = as.numeric(years_educ))
#sectors - and job_level are going to determine certification.
#for job level 3 need 50% to be certified, for job level 4 need 70% to be certified
sector <- workers %>% group_by(sectorid, job_level, certified) %>%
summarise(max_score = max(total_score),
min_score = min(total_score),
avg_score = mean(total_score),
name = first(sectorname),
count = n())
#filter sectors that don't have many obs (<200)
workers %<>% group_by(sectorid) %>% mutate(obs = n()) %>% filter(obs > 200)
#function to plot score histograms by subsector & job level (3 or 4) & score type (total, theory, or practical)
hister <- function(sector, DT, level, score) {
data <- filter(DT, subsectorid==sector, job_level==level)
sectorname = data$sectorname[1]
subsectorname = data$subsectorname[1]
if(sectorname!=subsectorname){sectorname <- paste(sectorname, '-' ,subsectorname)}
sectorname = paste0(sectorname, '-', as.character(sector), " - Level " , as.character(level))
plot_level_3 <- ggplot(data, aes_string(x = score, fill="certified")) +
geom_histogram(data =data %>% filter(total_score!=0) , binwidth = 5, alpha=0.4) +
ggtitle(paste(sectorname))
}
beauty <- 49
lapply(beauty, FUN=hister, DT=workers, level=3, score="total_score")
lapply(beauty, FUN=hister, DT=workers, level=3, score="theory_score")
lapply(beauty, FUN=hister, DT=workers, level=3, score="practical_score")
# graph parameidcs on own to adjust bins since scale is so different.
ggplot(workers %>% filter(subsectorid == 8, job_level==4, total_score!=0),
aes(x=total_score, fill=certified)) +
geom_histogram(binwidth=30 ,alpha=0.4) +
ggtitle("Healthcare, Paramedics, Level 4 - Total Score")
ggplot(workers %>% filter(subsectorid == 8, job_level==4, total_score!=0),
aes(x=practical_score, fill=certified)) +
geom_histogram(binwidth=30 ,alpha=0.4) +
#geom_density(alpha=0.4) +
ggtitle("Healthcare, Paramedics, Level 4 - Practical Score")
ggplot(workers %>% filter(subsectorid == 8, job_level==4, total_score!=0),
aes(x=theory_score, fill=certified)) +
geom_histogram(binwidth=5 ,alpha=0.4) +
ggtitle("Healthcare, Paramedics, Level 4 - Theory Score")
rd_data <- filter(workers, subsectorid %in% c(9, 68, 14, 13, 49))
rd_data <- left_join(rd_data,
rd_data %>% group_by(subsectorid, certified, job_level, year, month) %>%
summarise(threshold = min(total_score)) %>% ungroup() %>%
filter(certified==TRUE) %>% select(-certified),
by = c('subsectorid', 'year', 'month', 'job_level')) %>%
#
mutate(running = total_score - threshold, above = running > 0, above_run = above * running)
#plot combined distribution of running variable around threshold - this looks okay
ggplot(rd_data %>% filter(total_score!=0), aes(x = running)) +
geom_histogram(binwidth = 5, alpha=0.6) +
geom_vline(xintercept=0, colour="gray") +
ggtitle('Combined Centered Scores') +
xlab("Centered Test Score")
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
rdbwselect(y = as.numeric(certified), x = running, c = 0 , fuzzy = TRUE, p =3 )
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
rdbwselect(y = rd_data$certified), x = rd_data$running, c = 0 , fuzzy = TRUE, p =3 )
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
rdbwselect(y = rd_data$certified, x = rd_data$running, c = 0 , fuzzy = TRUE, p =3 )
?rdbeselect
?rdbwselect
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
rdbwselect(y = rd_data$certified, x = rd_data$running, fuzzy = TRUE, p =3 )
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
rdbwselect(y = rd_data$certified, x = rd_data$running)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
out<-rdbwselect(y = rd_data$certified, x = rd_data$running)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
out<-rdbwselect(y = rd_data$certified, x = rd_data$running, fuzzy = TRUE)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
run <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% select(running)
y <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% select(certified)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
run <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% select(running)
y_inc <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% select(certified)
out<-rdbwselect(y = y_inc, x = run, fuzzy = TRUE)
out<-rdbwselect(y = y_inc, x = run, fuzzy = TRUE)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
run <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% select(running)
y_inc <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% select(certified)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
run <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% ungroup() %>% select(running)
y_inc <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% ungroup() %>% select(certified)
out<-rdbwselect(y = y_inc, x = run, fuzzy = TRUE)
rm(y)
out<-rdbwselect(y = y_inc, x = run, fuzzy = TRUE)
out<-rdbwselect(y = y_inc, x = run)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
run <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% ungroup() %>% select(running)
y_cert <- rd_data %>% filter(!is.na(certified), !is.na(running)) %>% ungroup() %>% select(certified)
out<-rdbwselect(y_cert = , x = run)
out<-rdbwselect(y = y_cert , x = run)
out<-rdbwselect(y = rd_data$certified , x = rd_data$running)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
out<-rdbwselect(y = rd_data$certified , x = rd_data$running, fuzzy=TRUE)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, fuzzy or not, and order of polynomial (p),
out<-rdbwselect(y = rd_data$certified , x = rd_data$running, p=3)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, and order of polynomial (p),
out<-rdbwselect(y = rd_data$certified , x = rd_data$running, p=3, cluster = rd_data$center_id)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, and order of polynomial (p),
out<-rdbwselect(y = rd_data$certified , x = rd_data$running, p=3, cluster = rd_data$center_id)$bws
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, and order of polynomial (p),
rdbwselect(y = rd_data$certified , x = rd_data$running, p=3, cluster = rd_data$center_id) %>% summary()
library(rdrobust)
#select bandwidth (rdrobust package using CCT 2015 recommendations)
# give it the dependent var, running var, cutoff, and order of polynomial (p),
rdrobust(y = rd_data$certified , x = rd_data$running, p=3, cluster = rd_data$center_id) %>% summary()
#job placement
rdrobust(y = rd_data$placement , x = rd_data$running, p=3, cluster = rd_data$center_id) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id) %>% summary()
?rdrobust
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = c(rd_data$years_educ, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = rd_data$years_educ) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = rd_data$years_educ, rd_data$sectorid) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = c(rd_data$years_educ, rd_data$sectorid)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#job placement
rdrobust(y = rd_data$placement , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$sector_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$sectorid)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sector_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$center_id,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#first stage
rdrobust(y = rd_data$certified , x = rd_data$running, p=3, cluster = rd_data$sectorid) %>% summary()
#job placement
rdrobust(y = rd_data$placement , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#job placement
rdrobust(y = rd_data$placement , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#first stage
rdrobust(y = rd_data$certified , x = rd_data$running, p=1, cluster = rd_data$sectorid) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=2, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=4, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, fuzzy=t , cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, fuzzy=T , cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#job placement
rdplot(y=rd_data$placement, x=rd_data$running, binselect="es", ci=95,
+ title="RD Plot: Certification and Job Placement",
+ y.label="Probility Employed",
+ x.label="Test Score")
#job placement
rdplot(y=rd_data$placement, x=rd_data$running, binselect="es", ci=95,
+ title="RD Plot: Certification and Job Placement",
+ y.label="Probility Employed",
+ x.label="Test Score")
#job placement
rdplot(y=rd_data$placement, x=rd_data$running, binselect="es", ci=95,
+ title="RD Plot: Certification and Job Placement",
+ y.label="Probility Employed",
+ x.label="Test Score" )
#job placement
rdplot(y=rd_data$placement, x=rd_data$running, binselect="es", ci=95,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
?rdplot
#job placement
rdplot(y=rd_data$placement, x=rd_data$running, binselect="es", ci=95)
,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score"
#job placement
rdplot(y=rd_data$placement, x=rd_data$running, binselect="es", ci=95,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#job placement
filter <- rd_data %>% filter(abs(running) < 100)
#job placement
filter <- rd_data %>% filter(abs(running) < 100)
rdplot(y=filter$placement, x=filter$running, binselect="es", ci=95,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#job placement - this does a bad job I think, make your own...
filter <- rd_data %>% filter(abs(running) < 100)
rdplot(y=filter$placement, x=filter$running, binselect="es", ci=95,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=3, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
rdplot(y=filter$placement, x=filter$monthlyincome, binselect="es", ci=95,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
rdplot(y=filter$monthlyincome, x=filter$running, binselect="es", ci=95,
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
?rdplot
rdplot(y=filter$placement, x=filter$running, binselect="es", ci=95,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#job placement - this does a bad job I think, make your own...
filter <- rd_data %>% filter(abs(running) < 100)
rdplot(y=filter$placement, x=filter$running, binselect="es", ci=95,
covs = cbind(filter$years_educ, filter$sectorid, filter$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
filter <- rd_data %>% filter(abs(running) < 100)
rdplot(y=filter$monthlyincome, x=filter$running, binselect="es", ci=95,
covs = cbind(filter$years_educ, filter$sectorid, filter$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#job placement - this does a bad job I think, make your own...
filter <- rd_data %>% filter(abs(running) < 150)
rdplot(y=filter$placement, x=filter$running, binselect="es", ci=95,
covs = cbind(filter$years_educ, filter$sectorid, filter$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
filter <- rd_data %>% filter(abs(running) < 150)
rdplot(y=filter$monthlyincome, x=filter$running, binselect="es", ci=95,
covs = cbind(filter$years_educ, filter$sectorid, filter$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#job placement - this does a bad job I think, make your own...
filter <- rd_data %>% filter(abs(running) < 200)
rdplot(y=filter$placement, x=filter$running, binselect="es", ci=95,
covs = cbind(filter$years_educ, filter$sectorid, filter$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
filter <- rd_data %>% filter(abs(running) < 200)
rdplot(y=filter$monthlyincome, x=filter$running, binselect="es", ci=95,
covs = cbind(filter$years_educ, filter$sectorid, filter$center_id),
title="RD Plot: Certification and Job Placement",
y.label="Probility Employed",
x.label="Test Score" )
#first stage
rdrobust(y = rd_data$certified , x = rd_data$running, p=1, cluster = rd_data$sectorid) %>% summary()
#job placement
rdrobust(y = rd_data$placement , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, p=1, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
#first stage
rdrobust(y = rd_data$certified , x = rd_data$running, cluster = rd_data$sectorid) %>% summary()
#job placement
rdrobust(y = rd_data$placement , x = rd_data$running, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$trainer_id)) %>% summary()
#income
rdrobust(y = rd_data$monthlyincome , x = rd_data$running, cluster = rd_data$sectorid,
covs = cbind(rd_data$years_educ, rd_data$sectorid, rd_data$center_id)) %>% summary()
?winsor
rmarkdown::render_site()
rmarkdown::render_site()
setwd("~/Website/gregorylane.github.io")
setwd("~/Website/gregorylane.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
install.packages('multicol')
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
