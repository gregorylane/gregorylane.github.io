se = df[i,paste0(treatname,"_se")]
scaler = ifelse(abs(beta/se) > 1.95, 0.6, 0.2)
points(beta, row, pch=19, col=alpha(cols[treatnum], scaler), cex=2)
points(c(beta-se*1.96, beta+se*1.96), c(row, row), type="o", pch="|", col=alpha(cols[treatnum], scaler))
}
}
axis(1, at=seq(-0.4, 0.8, 0.2), cex.axis=1.4)
mtext(text="Work vs. Cash", side=3 , adj = 0.73)
dev.off()
#Load in loan repayment data for analysis
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
#load in alternative flood definitions and keep only ffwc_active
alt_flood_2016 <- read.csv("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Activation/active_branches_2016.csv") %>%
select(-active_date, -treatment, -active_branch) %>%
mutate(year=2016) %>% rename(ffwc_flooded = ffwc_active)
alt_flood_2017 <- read.csv("~/Dropbox/Berkeley/Bangladesh/Data Raw/RCT Data/Trigger Data/2017_flood_activation.csv") %>%
select(-active_date, -flooded, -treatment)
alt_flood <- rbind(alt_flood_2016, alt_flood_2017)
rm(alt_flood_2016, alt_flood_2017)
#merge new flood def with loans data
loans <- left_join(loans, alt_flood, by.x=c("hchyid", "year"), by.y=c("hchyid", "year"))
#need to change flood var so it is only active post the flood time (as I did with base flood variable)
#problem is that we don't have accurate active date for ffwc only flooded branches
#choose July 24 for 2016 (earliest flood) and July 16 for 2017 (earliest flood)
loans %<>% mutate(ffwc_flooded = ifelse(hchyid %in% c(231, 233, 303, 350, 370, 1134, 3118, 3756, 8487) & year==2016 & date > as.Date.character("2016-07-24"), 1, flooded))
loans %<>% mutate(ffwc_flooded = ifelse(hchyid %in% c(278, 3146, 5687) & year==2017 & date > as.Date.character("2016-07-16"), 1, flooded))
summary(loans$post_period)
# make new treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood_ffwc = act_treatment * ffwc_flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg8_ffwc)
# make new treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood_ffwc = act_treatment * post_period * ffwc_flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg8_ffwc)
# make new treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood_ffwc = act_treatment * post_period * flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg8_ffwc)
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
reg8 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood + flooded |
month + year | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg8)
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#Interaction for credit score
reg7 <- felm(miss_pay_behind ~  act_treatment + score_treat + credit_score2  |
month  + year  | 0 | hchyid,
data = loans %>% filter(eligible==1))
#better repayment
reg8 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood + flooded |
month + year | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg8)
#Load in loan repayment data for analysis
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# winsor vars for regressions
loans %<>% mutate(savbalan = winsor(savbalan, trim=0.01), #winsorize the savings data
tranamount = winsor(tranamount, trim=0.01))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
distress_treat = flood_distress * act_treatment_post,
flood_distress2 = ifelse(month <9 & year==2017, 0, flood_distress), #create other flood distress base var for reg that has zeros in pre-period
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
reg8 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood + flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg8)
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# winsor vars for regressions
loans %<>% mutate(savbalan = winsor(savbalan, trim=0.01), #winsorize the savings data
tranamount = winsor(tranamount, trim=0.01))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
distress_treat = flood_distress * act_treatment_post,
flood_distress2 = ifelse(month <9 & year==2017, 0, flood_distress), #create other flood distress base var for reg that has zeros in pre-period
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#Load in loan repayment data for analysis
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# winsor vars for regressions
loans %<>% mutate(savbalan = winsor(savbalan, trim=0.01), #winsorize the savings data
tranamount = winsor(tranamount, trim=0.01))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
distress_treat = flood_distress * act_treatment_post,
flood_distress2 = ifelse(month <9 & year==2017, 0, flood_distress), #create other flood distress base var for reg that has zeros in pre-period
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
reg8 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood + flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg8)
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year  + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
#load in alternative flood definitions and keep only ffwc_active
alt_flood_2016 <- read.csv("~/Dropbox/Berkeley/Bangladesh/Data Modifed/Activation/active_branches_2016.csv") %>%
select(-active_date, -treatment, -active_branch) %>%
mutate(year=2016) %>% rename(ffwc_flooded = ffwc_active)
alt_flood_2017 <- read.csv("~/Dropbox/Berkeley/Bangladesh/Data Raw/RCT Data/Trigger Data/2017_flood_activation.csv") %>%
select(-active_date, -flooded, -treatment)
alt_flood <- rbind(alt_flood_2016, alt_flood_2017)
rm(alt_flood_2016, alt_flood_2017)
#merge new flood def with loans data
loans <- left_join(loans, alt_flood, by.x=c("hchyid", "year"), by.y=c("hchyid", "year"))
#need to change flood var so it is only active post the flood time (as I did with base flood variable)
#problem is that we don't have accurate active date for ffwc only flooded branches
#choose July 24 for 2016 (earliest flood) and July 16 for 2017 (earliest flood)
loans %<>% mutate(ffwc_flooded = ifelse(hchyid %in% c(231, 233, 303, 350, 370, 1134, 3118, 3756, 8487) & year==2016 & date > as.Date.character("2016-07-24"), 1, flooded))
loans %<>% mutate(ffwc_flooded = ifelse(hchyid %in% c(278, 3146, 5687) & year==2017 & date > as.Date.character("2016-07-16"), 1, flooded))
# make new treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood_ffwc = act_treatment * post_period * flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year  + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg8_ffwc)
#Rand Inf p-value calc. for repayment
ri_repay_1 <- function(X, data) {
print(X)
branches <- select(data, hchyid, district) %>% unique()
branches %<>% mutate(rand = runif(nrow(branches))) %>% group_by(district) %>% arrange(district, rand) %>%
mutate(n = row_number()) %>%
mutate(new_treatment = mod(n, 2)) %>%
ungroup() %>% select(hchyid, new_treatment)
new_data <- left_join(data, branches)
new_data %<>% mutate(new_treat_post_flood = flooded * new_treatment)
new_reg <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year  + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
beta1 <- new_reg$beta[1]
beta2 <- new_reg$beta[2]
betas <- c(beta1, beta2)
return(betas)
}
set.seed(123)
loops <- c(1:100)
try <- as.data.frame(t(sapply(loops, FUN=ri_repay_1, data=loans %>% filter(eligible==1))))
ri_p_repay_1 <- nrow(filter(try, abs(V1) > abs(reg8_ffwc$beta[1])))/100 #ri p-value for treatment = 0.54
ri_p_repay_2 <- nrow(filter(try, abs(V1) > abs(reg8_ffwc$beta[2])))/100 #ri p-value for inter = 0.04
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.00"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment_post_ffwc.tex')) #write output
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.00"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment_post_ffwc.tex')) #write output
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.02"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.02"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment_post_ffwc.tex')) #write output
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay_ffwc",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.02"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment_post_ffwc.tex')) #write output
summary(loans$date)
#need to change flood var so it is only active post the flood time (as I did with base flood variable)
#problem is that we don't have accurate active date for ffwc only flooded branches
#choose July 24 for 2016 (earliest flood) and July 16 for 2017 (earliest flood)
loans %<>% mutate(ffwc_flooded = ifelse(hchyid %in% c(231, 233, 303, 350, 370, 1134, 3118, 3756, 8487) & (year==2016 | year==2017 & month <=3) & date > as.Date.character("2016-07-24"), 1, flooded))
loans %<>% mutate(ffwc_flooded = ifelse(hchyid %in% c(278, 3146, 5687) & year==2017 & date > as.Date.character("2016-07-16"), 1, flooded))
# make new treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood_ffwc = act_treatment * post_period * flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
# make new treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood_ffwc = act_treatment * post_period * ffwc_flooded,
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year  + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
#better repayment
reg8_ffwc <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood_ffwc + ffwc_flooded |
month + year  + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg8_ffwc)
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay_ffwc",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.02"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment_post_ffwc.tex')) #write output
#Loan Repayment Results
repayment <- stargazer(reg8,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x FFWC Flood",
"FFWC Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.54"),
c("Rand Inf. p-val Interaction", "0.04"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay_ffwc",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x FFWC Flood",
"FFWC Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.02"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. FFWC Flood is an indicator that each branch was flood affected \emph{only} according to the government run FFWC (defined as having water levels exceed the ``danger'' threshold).}"
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. FFWC Flood is an indicator that each branch was flood affected \emph{only} according to the government run FFWC (defined as having water levels exceed the danger threshold).}"
#Loan Repayment Results
repayment <- stargazer(reg8_ffwc,
header = FALSE,
title = "Repayment with Alternative Flood Definition",
label = "tbl:repay_ffwc",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x FFWC Flood",
"FFWC Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes", "Yes"),
c("Rand Inf. p-val Treatment", "0.46"),
c("Rand Inf. p-val Interaction", "0.02"),
c("Month F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096"),
c("Unique Borrowers", "109,647")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. FFWC Flood is an indicator that each branch was flood affected \\emph{only} according to the government run FFWC (defined as having water levels exceed the danger threshold).}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment_post_ffwc.tex')) #write output
setwd("~/Documents/Website/gregorylane.github.io")
rmarkdown::render_site()
setwd("~/Documents/Website/gregorylane.github.io")
rmarkdown::render_site()
