data_g<- data[year > 2015 & tot_items < 10000 & tot_items >1000 & !(year==2018 & week>40), #can change threshold for time and size of firms
.(items = sum(items),
tot_eur = sum(nmv_eur)),
by=loan_time_w]
ggplot(data_g, aes(x = loan_time_w, y=items)) +
geom_line() +
geom_vline(xintercept = 0, color='red')
#firms that have smaller number of total sales
reg_sales_small <- felm(items ~ post_loan + loan_time + loan_time2 | month + year + bob_id | 0 | bob_id,
data = data[year > 2016 & tot_items < 10000 & loan_time_w <9])
summary(reg_sales_small)
p_load(
ggplot2, ggthemes, viridis, plotly,
stringr, lubridate,
readr, data.table, magrittr,
googlesheets, lfe, stargazer
)
View(data)
#by volume
ggplot(sales_time[year>2015 & !(year==2018 & week>40)], aes(x = date_sale, y=items)) +
geom_line() +
xlab('Date') + ylab('Weekly Items Sold on Platform (Nigeria)') +
theme_bw()
summary(data)
out_sales <- stargazer(reg_sales_small,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
#out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Took Good Loan",
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes"),
c("Month F.E.", "Yes"),
c("Time Trend", "Yes"),
c("Mean of Dependent Var", "56.43")),
notes = "\\parbox[t]{8cm}{\\emph{}",
notes.align = "l")
dir_save    <- dir_project %>% paste0("presentations/figures/")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
out_sales <- stargazer(reg_sales_small,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
#out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Took Good Loan",
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes"),
c("Month F.E.", "Yes"),
c("Time Trend", "Yes"),
c("Mean of Dependent Var", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
out_sales <- stargazer(reg_sales_small,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes"),
c("Month F.E.", "Yes"),
c("Time Trend", "Yes"),
c("Mean of Dependent Var", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
out_sales <- stargazer(reg_sales_small,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes"),
c("Month F.E.", "Yes"),
c("Time Trend", "Yes"),
c("Mean of Dependent Var", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
out_sales <- stargazer(reg_sales_small,
)
out_sales <- stargazer(reg_sales_small,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
omit = c("loan_time", "loan_time2)"),
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes"),
c("Month F.E.", "Yes"),
c("Time Trend", "Yes"),
c("Mean of Dependent Var", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
out_sales <- stargazer(reg_sales_small,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
omit = c("loan_time", "loan_time2)"),
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan Received"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes"),
c("Month F.E.", "Yes"),
c("Time Trend", "Yes"),
c("Mean of Dependent Var", "56.43")),
notes = "",
notes.align = "l")
View(data)
data <- data[, loan_amt := max(loan_amt, na.rm=TRUE), by=bob_id]
View(data)
data <- data[, amt_loan := max(amt_loan, na.rm=TRUE), by=bob_id]
reg_sales_small_lsize <- felm(items ~ post_loan + loan_time + loan_time2 + amt_loan | month + year + bob_id | 0 | bob_id,
data = data[year > 2016 & tot_items < 10000 & loan_time_w <9])
summary(reg_sales_small_lsize)
View(data)
View(data)
data[, := amt_loan_active = amt_laon * post_loan]
data[, amt_loan_active := amt_laon * post_loan]
# Create Loan variables for analysis ----------------------------------------------------------------
data <- data[, date_loan := max(date_loan, na.rm=TRUE), by=bob_id]
data <- data[, amt_loan := max(amt_loan, na.rm=TRUE), by=bob_id]
data <- data[, loan_time := as.numeric(date_sale - date_loan)] #create loan time in days (negative before loan)
data[, `:=` (post_loan = loan_time >0, #indicator for post loan
loan_time2 = loan_time^2, #squared time trend
loan_time_w = round(loan_time/7) #round time trend to weeks
)]
data[, amt_loan_active := amt_laon * post_loan]
data[, amt_loan_active := amt_loan * post_loan]
reg_sales_small_lsize <- felm(items ~ post_loan + loan_time + loan_time2 + amt_loan_active | month + year + bob_id | 0 | bob_id,
data = data[year > 2016 & tot_items < 10000 & loan_time_w <9])
summary(reg_sales_small_lsize)
out_sales <- stargazer(reg_sales_small, reg_sales_small_lsize,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
omit = c("loan_time", "loan_time2)"),
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan Received", "Loan Size (Naira)"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes", "Yes"),
c("Month F.E.", "Yes", "Yes"),
c("Time Trend", "Yes", "Yes"),
c("Mean of Dependent Var", "56.43", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
#add loan size
data[, amt_loan_active := amt_loan_active/1000] #change units
reg_sales_small_lsize <- felm(items ~ post_loan + loan_time + loan_time2 + amt_loan_active | month + year + bob_id | 0 | bob_id,
data = data[year > 2016 & tot_items < 10000 & loan_time_w <9])
summary(reg_sales_small_lsize)
out_sales <- stargazer(reg_sales_small, reg_sales_small_lsize,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
omit = c("loan_time", "loan_time2)"),
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan Received", "Loan Size (Naira)"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes", "Yes"),
c("Month F.E.", "Yes", "Yes"),
c("Time Trend", "Yes", "Yes"),
c("Mean of Dependent Var", "56.43", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
out_sales <- stargazer(reg_sales_small, reg_sales_small_lsize,
#out = '~/Dropbox/Berkeley/Bangladesh/Papers/tables/temp.tex',
out.header = FALSE,
label = "tbl:sales_small",
header = FALSE,
title = "Effect of Loan on Weekly Sales",
dep.var.caption = "",
dep.var.labels  = "Weekly Items Sold",
omit = c("loan_time", "loan_time2)"),
model.numbers = FALSE,
digits = 3,
covariate.labels = c("Loan Received", "Loan Size (Ths. Naira)"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year F.E.", "Yes", "Yes"),
c("Month F.E.", "Yes", "Yes"),
c("Time Trend", "Yes", "Yes"),
c("Mean of Dependent Var", "56.43", "56.43")),
notes = "",
notes.align = "l")
cat(out_sales, sep = '\n', file=paste0(dir_save, 'sales_small.tex')) #write output
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on Oct 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#Edited again on Oct 26th to add treatment keys to output
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181213) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 1236 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
keys <- bind_rows(pure_control, control, treat) %>%
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
# CREATING FINAL RANDOMIZATION LIST ------------------------------------------------------------------
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
#write_csv(keys, "~/Dropbox/Matatu_project_David_Fred/rct_docs/surveys/look_up/look_up_pilot.csv")
#write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
write_csv(random_list_1, paste0("~/Dropbox/Research/Kenya/MatatuPassengers/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on Oct 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#Edited again on Oct 26th to add treatment keys to output
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181213) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 1236 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
keys <- bind_rows(pure_control, control, treat) %>%
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
# CREATING FINAL RANDOMIZATION LIST ------------------------------------------------------------------
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
#write_csv(keys, "~/Dropbox/Matatu_project_David_Fred/rct_docs/surveys/look_up/look_up_pilot.csv")
#write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on Oct 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#Edited again on Oct 26th to add treatment keys to output
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20190103) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 1336 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
keys <- bind_rows(pure_control, control, treat) %>%
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
# CREATING FINAL RANDOMIZATION LIST ------------------------------------------------------------------
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
#write_csv(keys, "~/Dropbox/Matatu_project_David_Fred/rct_docs/surveys/look_up/look_up_pilot.csv")
#write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
setwd("~/Website/gregorylane.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
