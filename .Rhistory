############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on August 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#THIS IS ONLY PURE CONTROL AND CONTROL FOR THE PILOT STAGES
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181025) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 536 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
View(treat)
View(pure_control)
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on August 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#THIS IS ONLY PURE CONTROL AND CONTROL FOR THE PILOT STAGES
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181025) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 636 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
keys <- bind_rows(pure_control, control) %>%  #removed 'treat'
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
View(keys)
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
View(random_list_1)
View(order)
View(keys)
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on August 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#THIS IS ONLY PURE CONTROL AND CONTROL FOR THE PILOT STAGES
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181025) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 636 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
View(order)
keys <- bind_rows(pure_control, control, treat) %>%
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
View(keys)
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
View(random_list_tmp)
summary(as.factor(keys$infoLabel))
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on August 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#THIS IS ONLY PURE CONTROL AND CONTROL FOR THE PILOT STAGES
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181024) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 636 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
keys <- bind_rows(pure_control, control, treat) %>%
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
# CREATING FINAL RANDOMIZATION LIST ------------------------------------------------------------------
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
summary(as.factor(keys$infoLabel))
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on August 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#THIS IS ONLY PURE CONTROL AND CONTROL FOR THE PILOT STAGES
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20181026) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 636 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control", "Treatment"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(seq_within)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
treat <- data.frame(key = c(treat)) %>%
mutate(rnum =runif(n=max_t)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
keys <- bind_rows(pure_control, control, treat) %>%
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
# CREATING FINAL RANDOMIZATION LIST ------------------------------------------------------------------
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
summary(as.factor(keys$infoLabel))
View(random_list_1)
write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,stargazer, pander, ggthemes, ggplot2)
temp <- ymd_hms("2017-01-01 00:20:10") #have stupid ludbridate read so don't get error
rm(temp)
dir_data <- '~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/'
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "dabi_disbursals"))
summary(disburse)
22084447/63003088
1/0.56
1/0.54
(1*(1+0.005)^5)/0.05
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# winsor vars for regressions
loans %<>% mutate(savbalan = winsor(savbalan, trim=0.01), #winsorize the savings data
tranamount = winsor(tranamount, trim=0.01))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
distress_treat = flood_distress * act_treatment_post,
flood_distress2 = ifelse(month <9 & year==2017, 0, flood_distress), #create other flood distress base var for reg that has zeros in pre-period
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# winsor vars for regressions
loans %<>% mutate(savbalan = winsor(savbalan, trim=0.01), #winsorize the savings data
tranamount = winsor(tranamount, trim=0.01))
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
distress_treat = flood_distress * act_treatment_post,
flood_distress2 = ifelse(month <9 & year==2017, 0, flood_distress), #create other flood distress base var for reg that has zeros in pre-period
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
graph2<- ggplot(loans %>% filter(credit_score > 77 & credit_score <85, post_period==1), aes(x=credit_score, y=miss_pay_behind, color=as.factor(treatment))) +
geom_smooth(se=FALSE) +
geom_point(data=col_repay_data2) +
xlab('Credit Score') + ylab('Probability Missed Payment') +
ylim(0, NA) +
theme_bw() +
scale_colour_manual(name="Treatment", values=c("#F8766D", "#00BFC4"))
# Ovreall repayment rates across creditscore
col_repay_data <- loans %>% filter(credit_score > 77 & credit_score <85, post_period==1) %>%
mutate(bin = ntile(credit_score, 10)) %>%
group_by(bin) %>%
summarise(miss_pay_behind = mean(miss_pay_behind, na.rm=TRUE),
credit_score= mean(credit_score, na.rm=TRUE))
graph2<- ggplot(loans %>% filter(credit_score > 77 & credit_score <85, post_period==1), aes(x=credit_score, y=miss_pay_behind, color=as.factor(treatment))) +
geom_smooth(se=FALSE) +
geom_point(data=col_repay_data2) +
xlab('Credit Score') + ylab('Probability Missed Payment') +
ylim(0, NA) +
theme_bw() +
scale_colour_manual(name="Treatment", values=c("#F8766D", "#00BFC4"))
col_repay_data2 <- loans %>% filter(credit_score > 77 & credit_score <85, post_period==1) %>%
mutate(bin = ntile(credit_score, 10)) %>%
group_by(bin, treatment) %>%
summarise(miss_pay_behind = mean(miss_pay_behind, na.rm=TRUE),
credit_score= mean(credit_score, na.rm=TRUE))
graph2<- ggplot(loans %>% filter(credit_score > 77 & credit_score <85, post_period==1), aes(x=credit_score, y=miss_pay_behind, color=as.factor(treatment))) +
geom_smooth(se=FALSE) +
geom_point(data=col_repay_data2) +
xlab('Credit Score') + ylab('Probability Missed Payment') +
ylim(0, NA) +
theme_bw() +
scale_colour_manual(name="Treatment", values=c("#F8766D", "#00BFC4"))
graph2
ggsave(filename="repayment_graph2.pdf", plot=graph2, path = paste0(dir_save_fig))
setwd("~/Website/gregorylane.github.io")
rmarkdown::render_site()
render_site()
rmarkdown::render_site()
