geom_hline(yintercept = 0.0011, alpha=0.5, linetype="dotdash") + theme(legend.position = "none") + ylim(-0.005, 0.015)
grapher(data =dt_lost_days, x_var="lost_days", y_vars=c("Firing")) +
xlab("Days Lost") + ylab("Firing Probability")  + theme_minimal() +
geom_hline(yintercept = 0.0011, alpha=0.5, linetype="dotdash") + theme(legend.position = "none") + ylim(-0.005, 0.03)
ggsave("match_firing_vary_lostdays.png", path = "~/Dropbox/Matatu/figures/replication", device="png")
rm(exp_cost, delta, h, outside_option, work_cost)
rm(exp_cost, delta, p, outside_option, work_cost)
########################################################################
###### Examine Treatment Effects     ###################################
########################################################################
treat_vary_work_costs <- function(extra_costs, start_cost) {
work_cost <- start_cost + extra_costs
#calc status quo
status_quo <- as.data.frame(t(sapply(1:100, boot_opt, work_cost=start_cost, rep_cost=4.9, treat=0, p=p)))
names(status_quo) <- c("target", "U", "V", "ep", "exp_profit", "intercept", "exp_salary", "exp_income", "welfare")
status_quo %<>% mutate(ep = 1-ep)
status_quo <-data.frame(sq_estimate=c(mean(status_quo$target, na.rm=T), mean(status_quo$U, na.rm=T), mean(status_quo$V, na.rm=T), mean(status_quo$ep, na.rm=T), mean(status_quo$exp_profit, na.rm=T), mean(status_quo$exp_salary, na.rm=T), mean(status_quo$welfare, na.rm=T)),
sq_stderr = c(sd(status_quo$target, na.rm=T),sd(status_quo$U, na.rm=T), sd(status_quo$V, na.rm=T), sd(status_quo$ep, na.rm=T), sd(status_quo$exp_profit, na.rm=T), sd(status_quo$exp_salary, na.rm=T), sd(status_quo$welfare, na.rm=T)))
#calc after treatment
outputs <- as.data.frame(t(sapply(1:200, boot_opt, work_cost=work_cost, rep_cost=exp_cost, treat=1, p=p)))
names(outputs) <- c("target", "U", "V", "ep", "exp_profit", "intercept", "exp_salary", "exp_income", "welfare")
outputs %<>% mutate(ep = 1-ep)
results<-data.frame(estimate=c(mean(outputs$target, na.rm=T), mean(outputs$U, na.rm=T), mean(outputs$V, na.rm=T), mean(outputs$ep, na.rm=T), mean(outputs$exp_profit, na.rm=T), mean(outputs$exp_salary, na.rm=T), mean(outputs$welfare, na.rm=T)),
stderr = c(sd(outputs$target, na.rm=T),sd(outputs$U, na.rm=T), sd(outputs$V, na.rm=T), sd(outputs$ep, na.rm=T), sd(outputs$exp_profit, na.rm=T), sd(outputs$exp_salary, na.rm=T), sd(outputs$welfare, na.rm=T)))
#bind together and calc diff and standard error of diffs
results <- cbind(status_quo, results)
results %<>% mutate(diff = estimate - sq_estimate,
diff_se = sqrt(sq_stderr^2 +stderr^2))
results$names <- c("Target", "U", "V","Firing","Profit", "Salary", "Welfare")
results %<>%  mutate(upper = diff+1.96*diff_se,
lower = diff-1.96*diff_se,
increased_cost = extra_costs)
results2 <- pivot_wider(results, id_cols=increased_cost,
names_from=names,
values_from=c(diff, diff_se, upper, lower))
#put in terms of % increase
results %<>% mutate(increased_cost = increased_cost/4)
return(results)
}
grapher3<- function(data, x_var, y_vars) {
data %<>% filter(names %in% y_vars )
plot <- ggplot(data=data) +
geom_line(aes(x=eval(as.symbol(x_var)), y=diff, color=names)) +
geom_line(aes(x=eval(as.symbol(x_var)), y=upper, color=names), linetype="dashed") +
geom_line(aes(x=eval(as.symbol(x_var)), y=lower, linetype="dashed", color=names), linetype="dashed") +
ylab("Outcomes") + xlab(x_var)
#ggsave(paste0("vary_", x_var,"_", y_vars[1], ".png"), path = "~/Dropbox/Matatu/model/greg/sims/plots", device="png")
return(plot)
}
#Choose parameters for estimation
exp_cost <- 2.7 # expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
#work_cost <- x # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
p <- lost_inc(51.7) #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.783/(1-delta)
dt_treat_cost <- bind_rows(lapply((-2:8)/4, treat_vary_work_costs, start_cost=7))
grapher3(data =dt_treat_cost, x_var="increased_cost", y_vars=c("Target")) +
geom_hline(yintercept = -1.13, alpha=0.7, linetype = "dashed") + geom_hline(yintercept = 0, alpha=0) +
xlab("% Increase in Work Cost") + ylab("Treatment Effect")  + theme_minimal() + labs(color='Outcome')
ggsave("pred_treat_target.png", path = "~/Dropbox/Matatu/figures/replication", device="png")
grapher3(data =dt_treat_cost, x_var="increased_cost", y_vars=c("U","Welfare")) + geom_hline(yintercept = 0, alpha=0.4) +
xlab("% Increase in Work Cost") + ylab("Treatment Effect")  + theme_minimal() + labs(color='Outcome')
ggsave("pred_treat_U_welfare.png", path = "~/Dropbox/Matatu/figures/replication", device="png")
grapher3(data =dt_treat_cost, x_var="increased_cost", y_vars=c("V")) + geom_hline(yintercept = 0, alpha=0.4) +
xlab("% Increase in Work Cost") + ylab("Treatment Effect")  + theme_minimal() + labs(color='Outcome')
ggsave("pred_treat_V.png", path = "~/Dropbox/Matatu/figures/replication", device="png")
grapher3(data =dt_treat_cost, x_var="increased_cost", y_vars=c("Profit","Salary")) +
geom_hline(yintercept = 0, alpha=0) +
xlab("% Increase in Work Cost") + ylab("Treatment Effect")  + theme_minimal() + labs(color='Outcome') +
geom_hline(yintercept = 3.62, alpha=0.7, linetype="dashed") + geom_hline(yintercept = 0.23, alpha=0.7, linetype="dotted") + ylim(-0.2,4)
ggsave("pred_treat_profsal.png", path = "~/Dropbox/Matatu/figures/replication", device="png")
options(scipen=99)
grapher3(data =dt_treat_cost, x_var="increased_cost", y_vars=c("Firing")) +
geom_hline(yintercept = 0, alpha=0.4) +
xlab("% Increase in Work Cost") + ylab("Treatment Effect")  + theme_minimal() + labs(color='Outcome')
ggsave("pred_treat_firing.png", path = "~/Dropbox/Matatu/figures/replication", device="png")
parameters3 <- read.csv("~/Dropbox/Matatu/model/greg/sims/50_parameters_treat_target.csv")
names(parameters3) <- c("work_cost", "obj_fun")
results_param_target<-data.frame(estimate=c(mean(parameters3$work_cost, na.rm=T), mean(parameters3$obj_fun, na.rm=T)),
stderr = c(sd(parameters3$work_cost), sd(parameters3$obj_fun, na.rm=T)))
results_param_target$names <- c("work_cost","obj_fun")
View(results_param_target)
#write_csv(parameters2, "~/Dropbox/Matatu/model/greg/sims/50_parameters_treat_all.csv")
parameters2 <- read.csv("~/Dropbox/Matatu/model/greg/sims/50_parameters_treat_all.csv")
names(parameters2) <- c("work_cost", "obj_fun")
results_param_all<-data.frame(estimate=c(mean(parameters2$work_cost, na.rm=T), mean(parameters2$obj_fun, na.rm=T)),
stderr = c(sd(parameters2$work_cost), sd(parameters2$obj_fun, na.rm=T)))
results_param_all$names <- c("work_cost","obj_fun")
View(results_param_all)
View(results_param_all)
########## Estimate treatment outcome for when matched on target, profit, and salary
#Change parameters for comparison after monitoring (220 (ish) Ksh drop in repair costs, work time up 10ish percent, so move 1 more work cost given convexity?)
exp_cost <- 2.7 # in data, 490 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 6.7 # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.843/(1-delta) #"Value of job is 289.59" which should be U minus outside option?
outputs2 <- as.data.frame(t(sapply(1:400, boot_opt, treat=1)) )
rm(list = ls())
options(stringsAsFactors=FALSE)
library(pacman)
p_load(data.table, tidyverse, magrittr, ggplot2, FixedPoint, fitdistrplus, stats, boot, gmm,
stargazer, xtable, lfe, huxtable, dfoptim)
set.seed(123456)
#Using real surplus data
surplus <- read.csv("~/Dropbox/Matatu/model/greg/sims/surplus2.csv") %>%
mutate(surplus = ifelse(surplus < 0, NA, surplus)) %>%
mutate(surplus = ifelse(surplus < 10 & surplus>0, surplus*100, surplus)) %>%
mutate(surplus = surplus/100-7)%>% #subtract off the subsistence constraint
na.omit
#Quick look at the different surplus distributions
#ggplot() + geom_histogram(data=surplus %>% filter(treat==1), aes(x=surplus, color="treat"), alpha=0.4) +
#  geom_histogram(data=surplus %>% filter(treat==0), aes(x=surplus, color="control"), alpha=0.4)
#Write function that optimizes T and finds fixed point
boot_opt <- function(x, treat) {
if(treat==1) {
surplus %<>% filter(treat==1)
}
if(treat==0) {
surplus %<>% filter(treat==0)
}
surplus <- as.data.frame(surplus$surplus)
sample <- sample_n(surplus, size=9504, replace=T)
#fit theoretical distribution to data
fg <- fitdist(sample$surplus, distr="logis")
#grab distribution paramters
mean <- as.numeric(fg$estimate[1]) #pull mean from estimated distribution
std <- as.numeric(fg$estimate[2]) #pul std from estimated distribution
#function to calc proportion lost income
lost_inc <- function(i) {
t <- 1:i
func <- function(x) {
val <- 10*0.99^(x-1)
}
vals <- lapply(t, func)
value <- 10 + sum(as.vector(unlist(vals)))
prop <- (10 + value)/(10/(1-0.99))
}
p <- lost_inc(days_lost)
#Starting choice of target and value of contract for fixed point algorithm
g_u <- 500 #need some fixed value of U for input in recursive problem
max_target = delta*g_u #calc max_target possible given the first guess of U
g_target <- min(30, max_target) #choose target, but don't allow choice above max transfer compatible T or algorithm breaks
g_v <- 400 #need some first guess fo V
g_welfare <- g_u + g_v
#welfare calculator using initial choice of the target, initial U choice and primitives (fixed point will run until input T = output T)
output <- function(inputs){
target <-inputs[1]
u_fix <-inputs[3]
v_fix <- inputs[4]
h <-p*v_fix
alpha <- (target - mean)/std #how many std. devs the target is above / below mean
intercept <- max(1 - (target)/(delta*u_fix),0) # define p_0
#Calc expected value of y above and below target
exp_y_below <- mean(surplus$surplus[surplus <= target], na.rm=T)
exp_y_above <- mean(surplus$surplus[surplus >= target], na.rm=T)
#Formula of expected continutation probability
continue_prob = plogis(target, mean, std)*(intercept + (1/(delta*u_fix))*exp_y_below)+(1-plogis(target, mean, std))
U <- ((1-plogis(target, mean, std))*(exp_y_above - target)-work_cost+
(1 - continue_prob)*delta*outside_option*(1-delta))/(1-delta) - outside_option
#Re-Calc max target possible to limit search function
max_target2 = delta*U
V <-  (target - plogis(target, mean, std)*(1+(v_fix/U))*(target - exp_y_below) - exp_cost -
(1 - continue_prob)*delta*(v_fix-h))/(1 - delta) #Calc Value of contract for owner
#find target that maximizes the owner payoff given all the above
xmin <- qlogis(0.1, mean, std) #Note, for some parameter values, too low a target search leads to NAs which breaks system, change this if optim fails
xmax <- qlogis(0.7, mean, std)
own_payoff <- function(target, u) {
payoff <- delta*V + target - exp_cost - plogis(target, mean, std)*(1+h/U)*(target - exp_y_below)
#payoff <- delta*V + target - exp_cost - plogis(target, mean, std)*(1+h/U)*target + plogis(target, mean, std)*exp_y_below*(h/U)
}
output <- optimize(own_payoff, interval=c(xmin, xmax), maximum=TRUE, u=U)
tar <- output$maximum
#Calculate owner payoff, driver payoff, and calc max target that driver will agree to (i.e. see if optimal owner target is outside of participation constraint)
own_payoff <- output$objective
dri_payoff <- delta*U - tar + mean - work_cost
min_agree_tar <- delta*U -dri_payoff + mean - work_cost
#Recalc target and payoffs now that see if at boundry
tar = min(tar, min_agree_tar)
own_payoff <- delta*V + tar - exp_cost - plogis(tar, mean, std)*(1+V/U)*(tar - exp_y_below)
profits <- tar - exp_cost - plogis(tar, mean, std)*(tar - exp_y_below)
exp_salary <- (1-plogis(target, mean, std))*(exp_y_above-target) + 7 #add back subsistence constraint
exp_income <- tar - plogis(tar, mean, std)*(tar - exp_y_below)
welfare <- U + V
return(c(tar, max_target2, U, V, continue_prob, profits, intercept, exp_salary, exp_income, welfare))
}
inputs <- c(g_target, 40, g_u, g_v, 0.9, 10, 0.9, 8, 10, g_welfare) #Give inputs for target, max target, Driver U, owner_payoff,  driver_payoff, and continue prob
values <- FixedPoint(Function = output, Inputs = inputs, Method = "Anderson", MaxIter = 10000)
end_target <- values$FixedPoint[1]
max_target_chosen <- round(values$FixedPoint[1],0.1) == round(values$FixedPoint[2], 0.1)
end_U <- values$FixedPoint[3]
end_V <- values$FixedPoint[4]
end_ep <- values$FixedPoint[5]
end_exp_profits <- values$FixedPoint[6]
end_intercept <- values$FixedPoint[7]
end_exp_salary <- values$FixedPoint[8]
end_exp_income <- values$FixedPoint[9]
end_welfare <- values$FixedPoint[10]
results <- c(end_target, end_U, end_V, end_ep, end_exp_profits, end_intercept, end_exp_salary, end_exp_income, end_welfare)
return(results)
}
#function to calc proportion lost income
lost_inc <- function(i) {
t <- 1:i
func <- function(x) {
val <- 10*0.99^(x-1)
}
vals <- lapply(t, func)
value <- 10 + sum(as.vector(unlist(vals)))
prop <- (10 + value)/(10/(1-0.99))
}
########## Estimate treatment outcome for when matched on target, profit, and salary
#Change parameters for comparison after monitoring (220 (ish) Ksh drop in repair costs, work time up 10ish percent, so move 1 more work cost given convexity?)
exp_cost <- 2.7 # in data, 490 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 6.7 # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.843/(1-delta) #"Value of job is 289.59" which should be U minus outside option?
########## Estimate treatment outcome
#Change parameters for comparison after monitoring (220 (ish) Ksh drop in repair costs, work time up 10ish percent, so move 1 more work cost given convexity?)
exp_cost <- 2.7 # in data, 490 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 8.24 # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.784/(1-delta) #"Value of job is 289.59" which should be U minus outside option?
########## Estimate treatment outcome
#Change parameters for comparison after monitoring (220 (ish) Ksh drop in repair costs, work time up 10ish percent, so move 1 more work cost given convexity?)
exp_cost <- 2.7 # in data, 490 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 8.24 # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.784/(1-delta) #"Value of job is 289.59" which should be U minus outside option?
outputs2 <- as.data.frame(t(sapply(1:400, boot_opt, treat=1)) )
outputs3 <- outputs2
results3<-data.frame(estimate=c(mean(outputs3$target, na.rm=T), mean(outputs3$U, na.rm=T), mean(outputs3$V, na.rm=T), mean(outputs3$ep, na.rm=T), mean(outputs3$exp_profit, na.rm=T), mean(outputs3$exp_salary, na.rm=T), mean(outputs3$welfare, na.rm=T)),
stderr = c(sd(outputs3$target, na.rm=T),sd(outputs3$U, na.rm=T), sd(outputs3$V, na.rm=T), sd(outputs3$ep, na.rm=T), sd(outputs3$exp_profit, na.rm=T), sd(outputs3$exp_salary, na.rm=T), sd(outputs3$welfare, na.rm=T)))
View(outputs2)
names(outputs3) <- c("target", "U", "V", "ep", "exp_profit", "intercept", "exp_salary", "exp_income", "welfare")
results3<-data.frame(estimate=c(mean(outputs3$target, na.rm=T), mean(outputs3$U, na.rm=T), mean(outputs3$V, na.rm=T), mean(outputs3$ep, na.rm=T), mean(outputs3$exp_profit, na.rm=T), mean(outputs3$exp_salary, na.rm=T), mean(outputs3$welfare, na.rm=T)),
stderr = c(sd(outputs3$target, na.rm=T),sd(outputs3$U, na.rm=T), sd(outputs3$V, na.rm=T), sd(outputs3$ep, na.rm=T), sd(outputs3$exp_profit, na.rm=T), sd(outputs3$exp_salary, na.rm=T), sd(outputs3$welfare, na.rm=T)))
results3$names <- c("target", "U", "V","ep","exp_profit", "exp_salary", "welfare")
table3 <- data.frame(Outcome = c("Target", "", "Expected Profit", "","Expected Salary", "", "Prob. Separation", "",
"Driver Value", "", "Owner Value", "",
"Total Welfare", ""),
Prediction=c(round(mean(outputs3$target, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$target, na.rm=T), digits=2)),")"),
round(mean(outputs3$exp_profit, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$exp_profit, na.rm=T), digits=2)),")"),
round(mean(outputs3$exp_salary, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$exp_salary, na.rm=T), digits=2)),")"),
round(1-mean(outputs3$ep, na.rm=T), digits=4), paste0("(", as.character(round(sd(1-outputs3$ep, na.rm=T), digits=4)),")"),
round(mean(outputs3$U, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$U, na.rm=T), digits=2)),")"),
round(mean(outputs3$V, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$V, na.rm=T), digits=2)),")"),
round(mean(outputs3$welfare, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$welfare, na.rm=T), digits=2)),")"))
)
View(table3)
########## Estimate treatment outcome for when matched on target, profit, and salary
#Change parameters for comparison after monitoring (220 (ish) Ksh drop in repair costs, work time up 10ish percent, so move 1 more work cost given convexity?)
exp_cost <- 2.7 # in data, 490 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 6.7 # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
########## Estimate treatment outcome for when matched on target, profit, and salary
#Change parameters for comparison after monitoring (220 (ish) Ksh drop in repair costs, work time up 10ish percent, so move 1 more work cost given convexity?)
exp_cost <- 2.7 # in data, 490 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 6.7 # cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.784/(1-delta) #"Value of job is 289.59" which should be U minus outside option?
outputs3 <- as.data.frame(t(sapply(1:400, boot_opt, treat=1)) )
names(outputs3) <- c("target", "U", "V", "ep", "exp_profit", "intercept", "exp_salary", "exp_income", "welfare")
results3<-data.frame(estimate=c(mean(outputs3$target, na.rm=T), mean(outputs3$U, na.rm=T), mean(outputs3$V, na.rm=T), mean(outputs3$ep, na.rm=T), mean(outputs3$exp_profit, na.rm=T), mean(outputs3$exp_salary, na.rm=T), mean(outputs3$welfare, na.rm=T)),
stderr = c(sd(outputs3$target, na.rm=T),sd(outputs3$U, na.rm=T), sd(outputs3$V, na.rm=T), sd(outputs3$ep, na.rm=T), sd(outputs3$exp_profit, na.rm=T), sd(outputs3$exp_salary, na.rm=T), sd(outputs3$welfare, na.rm=T)))
results3$names <- c("target", "U", "V","ep","exp_profit", "exp_salary", "welfare")
table3 <- data.frame(Outcome = c("Target", "", "Expected Profit", "","Expected Salary", "", "Prob. Separation", "",
"Driver Value", "", "Owner Value", "",
"Total Welfare", ""),
Prediction=c(round(mean(outputs3$target, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$target, na.rm=T), digits=2)),")"),
round(mean(outputs3$exp_profit, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$exp_profit, na.rm=T), digits=2)),")"),
round(mean(outputs3$exp_salary, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$exp_salary, na.rm=T), digits=2)),")"),
round(1-mean(outputs3$ep, na.rm=T), digits=4), paste0("(", as.character(round(sd(1-outputs3$ep, na.rm=T), digits=4)),")"),
round(mean(outputs3$U, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$U, na.rm=T), digits=2)),")"),
round(mean(outputs3$V, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$V, na.rm=T), digits=2)),")"),
round(mean(outputs3$welfare, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs3$welfare, na.rm=T), digits=2)),")"))
)
View(table3)
#read data with actual outcomes
data_survey <- read.csv("~/Dropbox/Matatu/model/greg/sims/table_data2.csv") %>%
mutate(profit = (grossprofit - salary)/100, #account makanga salary (which is same as driver)
salary = (salary*2)/100, #account for makanga salary (approx split with driver, hence double)
target = target/100,
valueofjob = valueofjob/100)
##Add Observed results to prediction table
#For baseline data, collapse down to did or pid where appropriate
data_survey_did <- data_survey %>% group_by(did) %>%
summarise(valueofjob=mean(valueofjob, na.rm=T))
#Reg daily outcomes on constant but cluster responses by pid, grab standard error for table
cluster_mean_stder <- function(var) {
reg <- felm(var ~ 1 | 0 | 0 | pid, data=data_survey)
cl_stder <- reg$cse
return(cl_stder)
}
temp <- as.data.frame(t(apply(data_survey, 2, FUN=cluster_mean_stder)))
survey_table <- data.frame(Observed=c(round(mean(data_survey$target, na.rm=T), digits=2), paste0("(", as.character(round(temp$target[1], digits=2)),")"),
round(mean(data_survey$profit, na.rm=T), digits=2), paste0("(", as.character(round(temp$profit[1], digits=2)),")"),
round(mean(data_survey$salary, na.rm=T), digits=2), paste0("(", as.character(round(temp$salary[1], digits=2)),")"),
round(mean(data_survey$separated_2, na.rm=T), digits=4), paste0("(", as.character(round(temp$separated_2[1], digits=4)),")"),
round(mean(data_survey_did$valueofjob, na.rm=T), digits=2), paste0("(", as.character(round(sd(data_survey_did$valueofjob, na.rm=T)/sqrt(nrow(data_survey_did)), digits=2)),")"),
"---", "",
"---", ""))
#Choose parameters
exp_cost <- 4.9 # in data average is 4.9 in control group, expected repairs costs at e* r* which are fixed by mean, std, of Y and independent of T, U
delta <- 0.99 #discount factor
work_cost <- 7 #  cost of effort + risk for driver which are independent of T, U - note: average G_e seems to be around 250, so seems reasonable that total cost is around that?
days_lost <- 51.69 #rehiring / firing cost for owner - input days lost income equivalent
outside_option <- 0.784/(1-delta) #"Value of job is 289.59" which should be U minus outside option?
#Bootstrap results
outputs <- as.data.frame(t(sapply(1:500, boot_opt, treat=0)) )
names(outputs) <- c("target", "U", "V", "ep", "exp_profit", "intercept", "exp_salary", "exp_income",  "welfare")
results<-data.frame(estimate=c(mean(outputs$target, na.rm=T), mean(outputs$U, na.rm=T), mean(outputs$V, na.rm=T), mean(outputs$ep, na.rm=T), mean(outputs$exp_profit, na.rm=T), mean(outputs$exp_salary, na.rm=T), mean(outputs$welfare, na.rm=T)),
stderr = c(sd(outputs$target, na.rm=T),sd(outputs$U, na.rm=T), sd(outputs$V, na.rm=T), sd(outputs$ep, na.rm=T), sd(outputs$exp_profit, na.rm=T), sd(outputs$exp_salary, na.rm=T), sd(outputs$welfare, na.rm=T)))
results$names <- c("target", "U", "V","ep","exp_profit", "exp_salary", "welfare")
#Put results into table for export - UPDATE - removed " - outside_option" b/c this is done in function above
options(scipen=99)
table <- data.frame(Outcome = c("Target", "", "Expected Profit", "","Expected Salary", "", "Prob. Separation", "",
"Driver Contract Value minus Outside Option", "", "Owner Value", "",
"Total Welfare", ""),
Prediction=c(round(mean(outputs$target, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs$target, na.rm=T), digits=2)),")"),
round(mean(outputs$exp_profit, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs$exp_profit, na.rm=T), digits=2)),")"),
round(mean(outputs$exp_salary, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs$exp_salary, na.rm=T), digits=2)),")"),
round(1- mean(outputs$ep, na.rm=T), digits=4), paste0("(", as.character(round(sd(1-outputs$ep, na.rm=T), digits=5)),")"),
round(mean(outputs$U, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs$U, na.rm=T), digits=2)),")"),
round(mean(outputs$V, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs$V, na.rm=T), digits=2)),")"),
round(mean(outputs$welfare, na.rm=T), digits=2), paste0("(", as.character(round(sd(outputs$welfare, na.rm=T), digits=2)),")"))
)
View(results3)
View(outputs3)
View(table3)
View(outputs3)
View(results3)
#read data with actual outcomes
data_survey <- read.csv("~/Dropbox/Matatu/model/greg/sims/table_data2.csv") %>%
mutate(profit = (grossprofit - salary)/100, #account makanga salary (which is same as driver)
salary = (salary*2)/100, #account for makanga salary (approx split with driver, hence double)
target = target/100,
valueofjob = valueofjob/100)
##Add Observed results to prediction table
#For baseline data, collapse down to did or pid where appropriate
data_survey_did <- data_survey %>% group_by(did) %>%
summarise(valueofjob=mean(valueofjob, na.rm=T))
#Reg daily outcomes on constant but cluster responses by pid, grab standard error for table
cluster_mean_stder <- function(var) {
reg <- felm(var ~ 1 | 0 | 0 | pid, data=data_survey)
cl_stder <- reg$cse
return(cl_stder)
}
temp <- as.data.frame(t(apply(data_survey, 2, FUN=cluster_mean_stder)))
survey_table <- data.frame(Observed=c(round(mean(data_survey$target, na.rm=T), digits=2), paste0("(", as.character(round(temp$target[1], digits=2)),")"),
round(mean(data_survey$profit, na.rm=T), digits=2), paste0("(", as.character(round(temp$profit[1], digits=2)),")"),
round(mean(data_survey$salary, na.rm=T), digits=2), paste0("(", as.character(round(temp$salary[1], digits=2)),")"),
round(mean(data_survey$separated_2, na.rm=T), digits=4), paste0("(", as.character(round(temp$separated_2[1], digits=4)),")"),
round(mean(data_survey_did$valueofjob, na.rm=T), digits=2), paste0("(", as.character(round(sd(data_survey_did$valueofjob, na.rm=T)/sqrt(nrow(data_survey_did)), digits=2)),")"),
"---", "",
"---", ""))
#Calc differences (with standard error)
diffs <- data.frame(Difference = c(
round(mean(outputs$target, na.rm=T)-mean(data_survey$target, na.rm=T), digits=2),
paste0("(",round(sqrt(sd(outputs$target, na.rm=T)^2 + temp$target[1]^2),digits=2),")"),
round(mean(outputs$exp_profit, na.rm=T)-mean(data_survey$profit, na.rm=T), digits=3),
paste0("(",round(sqrt(sd(outputs$exp_profit, na.rm=T)^2 + temp$profit[1]^2),digits=2),")"),
round(mean(outputs$exp_salary, na.rm=T)-mean(data_survey$salary, na.rm=T), digits=2),
paste0("(",round(sqrt(sd(outputs$exp_salary, na.rm=T)^2 + temp$salary[1]^2),digits=2),")"),
round(mean(1-outputs$ep, na.rm=T)-mean(data_survey$separated_2, na.rm=T), digits=4),
paste0("(",round(sqrt(sd(outputs$ep, na.rm=T)^2 + temp$separated_2[1]^2),digits=4),")"),
round(round(mean(outputs$U, na.rm=T), digits=2)-mean(data_survey_did$valueofjob, na.rm=T), digits=2),
paste0("(",round(sqrt(sd(outputs$U, na.rm=T)^2 + (sd(data_survey_did$valueofjob, na.rm=T)/sqrt(nrow(data_survey_did)))^2),digits=2),")"),
"---",
"",
"---",
""
))
#Calc Predicted Treatment effects - all match
pred_t_effects2 <- data.frame(`Pred Treat` = c(round(as.numeric(as.character(table3[[1,2]])) - as.numeric(as.character(table[[1,2]])),digits=2),
paste0("(",round(sqrt(sd(outputs3$target, na.rm=T)^2 +sd(outputs$target, na.rm=T)^2), digits=2),")"),
round(as.numeric(as.character(table3[[3,2]])) - as.numeric(as.character(table[[3,2]])), digits=2),
paste0("(",round(sqrt(sd(outputs3$exp_profit, na.rm=T)^2 +sd(outputs$exp_profit, na.rm=T)^2), digits=2),")"),
round(as.numeric(as.character(table3[[5,2]])) - as.numeric(as.character(table[[5,2]])),digits=2),
paste0("(",round(sqrt(sd(outputs3$exp_salary, na.rm=T)^2 +sd(outputs$exp_salary, na.rm=T)^2), digits=2),")"),
round(as.numeric(as.character(table3[[7,2]])) - as.numeric(as.character(table[[7,2]])),digits=5),
paste0("(",round(sqrt(sd(outputs3$ep, na.rm=T)^2 +sd(outputs$ep, na.rm=T)^2), digits=5),")"),
round(as.numeric(as.character(table3[[9,2]])) - as.numeric(as.character(table[[9,2]])),digits=2),
paste0("(",round(sqrt(sd(outputs3$U, na.rm=T)^2 +sd(outputs$U, na.rm=T)^2), digits=2),")"),
round(as.numeric(as.character(table3[[11,2]])) - as.numeric(as.character(table[[11,2]])),digits=2),
paste0("(",round(sqrt(sd(outputs3$V, na.rm=T)^2 +sd(outputs$V, na.rm=T)^2), digits=2),")"),
round(as.numeric(as.character(table3[[13,2]])) - as.numeric(as.character(table[[13,2]])),digits=2),
paste0("(",round(sqrt(sd(outputs3$welfare, na.rm=T)^2 +sd(outputs$welfare, na.rm=T)^2), digits=2),")")                                         )
)
#Actual Treatment Effects
act_treat <- data.frame(`Obs Treat`= c(-1.13, "(0.87)",
3.62, "(1.96)",
0.23,"(0.35)",
-0.01, "(0.01)",
"---","",
"---","",
"---",""))
diffs_treat2 <- data.frame(Difference = c(
round(as.numeric(pred_t_effects2[1,])-as.numeric(act_treat[1,]), digits=2),
paste0("(",round(sqrt(sd(outputs3$target, na.rm=T)^2 +sd(outputs$target, na.rm=T)^2 + 0.87^2),digits=2),")"),
round(as.numeric(pred_t_effects2[3,])-as.numeric(act_treat[3,]), digits=2),
paste0("(",round(sqrt(sd(outputs3$exp_profit, na.rm=T)^2 +sd(outputs$exp_profit, na.rm=T)^2 + 1.96^2),digits=2),")"),
round(as.numeric(pred_t_effects2[5,])-as.numeric(act_treat[5,]), digits=2),
paste0("(",round(sqrt(sd(outputs3$exp_salary, na.rm=T)^2 +sd(outputs$exp_salary, na.rm=T)^2 + 0.35^2),digits=2),")"),
round(as.numeric(pred_t_effects2[7,])-as.numeric(act_treat[7,]), digits=2),
paste0("(",round(sqrt(sd(outputs3$ep, na.rm=T)^2 +sd(outputs$ep, na.rm=T)^2 + 0.01^2),digits=2),")"),
"---","",
"---","",
"---",""
))
#Bind Tables
temp<- as.data.frame(table[,1])
names(temp) <- "Outcome"
out_table3 <- bind_cols(temp, pred_t_effects2, act_treat, diffs_treat2)
tbl3<- print.xtable(xtable(out_table3,
caption=c("Predicted Treatment Effects Versus Observed Treatment Effects"),
align=c("l","p{9cm}","c", "c", "c")),
include.rownames=FALSE,
caption.placement = getOption("xtable.caption.placement", "top"),
latex.environments = getOption("xtable.latex.environments", c("center")),
hline.after=c(-1,-1,0,nrow(table),nrow(table)),
add.to.row=list(pos=list(2,4,6,8,10,12), command=c("[.5em]","[.5em]","[.5em]","[.5em]","[.5em]","[.5em]"))
)
cat(tbl3, sep = '\n', file="~/Dropbox/Matatu/tables/compare_table3.tex")
print(xtable(out_table3), include.rownames=FALSE, only.contents=T, sanitize.text.function= identity, file="~/Dropbox/Matatu/tables/compare_table3_b.tex")
#Table for treatment effects - target match
fixed3 <- data.frame(`Input`= c("Repair Costs",
"",
"Discount Factor",
"",
"Firing Cost",
"",
"Outside Option",
""),
`Symbol` = c("$E[c(r)]$",
"",
"$\\delta$",
"",
"$h$",
"",
"$\\bar u$",
""),
`Value` = c("2.7",
"",
"0.99",
"",
"51.7",
"",
"7.84",
""),
`Justification` = c("Previous value of 4.9 minus observed treatment effect reduction of 2.2",
"",
"",
"",
"Fixed from previous value",
"",
"Fixed from previous value",
"")
)
calibration3 <- data.frame(`Input`= c( "Work Cost",
""),
`Symbol` = c("$\\psi(e^*, r^*)$",
""),
`Value` = c("6.7",
"(0.05)"),
`Interpertation` = c("Decrease of 0.3 (4\\%) from previous value",
"")
)
print(xtable(fixed3), include.rownames=FALSE, only.contents=T, sanitize.text.function= identity, file="~/Dropbox/Matatu/tables/replication/compare_table3_a.tex")
print(xtable(calibration3), include.rownames=FALSE, only.contents=T, sanitize.text.function= identity, file="~/Dropbox/Matatu/tables/replication/compare_table3_2a.tex")
cat(tbl3, sep = '\n', file="~/Dropbox/Matatu/tables/replication/compare_table3.tex")
print(xtable(out_table3), include.rownames=FALSE, only.contents=T, sanitize.text.function= identity, file="~/Dropbox/Matatu/tables/replication/compare_table3_b.tex")
calibration3 <- data.frame(`Input`= c( "Work Cost",
""),
`Symbol` = c("$\\psi(e^*, r^*)$",
""),
`Value` = c("6.7",
"(0.06)"),
`Interpertation` = c("Decrease of 0.3 (4\\%) from previous value",
"")
)
print(xtable(calibration3), include.rownames=FALSE, only.contents=T, sanitize.text.function= identity, file="~/Dropbox/Matatu/tables/replication/compare_table3_2a.tex")
calibration3 <- data.frame(`Input`= c( "Work Cost",
""),
`Symbol` = c("$\\psi(e^*, r^*)$",
""),
`Value` = c("6.7",
"(0.02)"),
`Interpertation` = c("Decrease of 0.3 (4\\%) from previous value",
"")
)
print(xtable(calibration3), include.rownames=FALSE, only.contents=T, sanitize.text.function= identity, file="~/Dropbox/Matatu/tables/replication/compare_table3_2a.tex")
parameters2 <- read.csv("~/Dropbox/Matatu/model/greg/sims/50_parameters_treat_all.csv")
results_param_all<-data.frame(estimate=c(mean(parameters2$work_cost, na.rm=T), mean(parameters2$obj_fun, na.rm=T)),
stderr = c(sd(parameters2$work_cost), sd(parameters2$obj_fun, na.rm=T)))
results_param_all$names <- c("work_cost","obj_fun")
View(results_param_all)
View(results_param_all)
parameters3 <- read.csv("~/Dropbox/Matatu/model/greg/sims/50_parameters_treat_target.csv")
names(parameters3) <- c("work_cost", "obj_fun")
results_param_target<-data.frame(estimate=c(mean(parameters3$work_cost, na.rm=T), mean(parameters3$obj_fun, na.rm=T)),
stderr = c(sd(parameters3$work_cost), sd(parameters3$obj_fun, na.rm=T)))
results_param_target$names <- c("work_cost","obj_fun")
View(results_param_target)
View(results_param_target)
setwd("~/Documents/Website/gregorylane.github.io")
rmarkdown::render_site()
