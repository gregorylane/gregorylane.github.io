for(i in 1:length(reg_profit_monthly$beta)) {
month_graph[i,2] <- reg_profit_monthly$beta[i]
month_graph[i,3] <- reg_profit_monthly$cse[i]
}
time <- c(1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9)
month_graph[,1] <- time
month_graph <- month_graph %>% mutate(upper = beta + 1.96*se ,
lower = beta - 1.96*se)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "Month", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("April", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=4.5, xmax=7.5, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
plot(profit_graph)
#break out profit by month
temp2 %<>% mutate(month2 = ifelse(month >3 & year==2016, month - 3, month + 9),
month_treat = as.factor(month2 * treatment))
#temp2 %<>% mutate(profit = profit / num_members)
reg_profit_monthly <- felm(profit ~ month_treat  | district + month2 | 0 | hchyid,
data = temp2 %>% filter((year==2016 & month >5) | (year==2017 & month <6)))
summary(reg_profit_monthly)
#make graph of treatment effect
month_graph <- data.frame(matrix(ncol = 3, nrow = length(reg_profit_monthly$beta)))
x <- c("time", "beta", "se")
colnames(month_graph) <- x
for(i in 1:length(reg_profit_monthly$beta)) {
month_graph[i,2] <- reg_profit_monthly$beta[i]
month_graph[i,3] <- reg_profit_monthly$cse[i]
}
time <- c(1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9)
month_graph[,1] <- time
month_graph <- month_graph %>% mutate(upper = beta + 1.96*se ,
lower = beta - 1.96*se)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "Month", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("April", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=4.5, xmax=7.5, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
plot(profit_graph)
#temp2 %<>% mutate(profit = profit / num_members)
reg_profit_monthly <- felm(profit ~ month_treat  | district + month2 | 0 | hchyid,
data = temp2 %>% filter((year==2016 & month >6) | (year==2017 & month <6)))
summary(reg_profit_monthly)
#make graph of treatment effect
month_graph <- data.frame(matrix(ncol = 3, nrow = length(reg_profit_monthly$beta)))
x <- c("time", "beta", "se")
colnames(month_graph) <- x
for(i in 1:length(reg_profit_monthly$beta)) {
month_graph[i,2] <- reg_profit_monthly$beta[i]
month_graph[i,3] <- reg_profit_monthly$cse[i]
}
time <- c(10, 11, 12, 13, 14, 4, 5, 6, 7, 8, 9)
month_graph[,1] <- time
month_graph <- month_graph %>% mutate(upper = beta + 1.96*se ,
lower = beta - 1.96*se)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "Month", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("April", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=4.5, xmax=6.8, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
plot(profit_graph)
#break out profit by month
temp2 %<>% mutate(month2 = ifelse(month >3 & year==2016, month - 3, month + 9),
month_treat = as.factor(month2 * treatment))
View(temp2)
#break out profit by month
temp2 %<>% mutate(month2 = ifelse(month >3 & year==2016, month - 4, month + 9),
month_treat = as.factor(month2 * treatment))
View(temp2)
#break out profit by month
temp2 %<>% mutate(month2 = ifelse(month >3 & year==2016, month - 4, month + 98,
#break out profit by month
temp2 %<>% mutate(month2 = ifelse(month >3 & year==2016, month - 4, month + 8),
month_treat = as.factor(month2 * treatment))
)
)
#break out profit by month
temp2 %<>% mutate(month2 = ifelse(month >3 & year==2016, month - 4, month + 8),
month_treat = as.factor(month2 * treatment))
View(temp2)
#temp2 %<>% mutate(profit = profit / num_members)
reg_profit_monthly <- felm(profit ~ month_treat  | district + month2 | 0 | hchyid,
data = temp2 %>% filter((year==2016 & month >6) | (year==2017 & month <6)))
summary(reg_profit_monthly)
#temp2 %<>% mutate(profit = profit / num_members)
reg_profit_monthly <- felm(profit ~ month_treat  | district + month2 | 0 | hchyid,
data = temp2 %>% filter((year==2016 & month >4) | (year==2017 & month <5)))
summary(reg_profit_monthly)
#make graph of treatment effect
month_graph <- data.frame(matrix(ncol = 3, nrow = length(reg_profit_monthly$beta)))
x <- c("time", "beta", "se")
colnames(month_graph) <- x
for(i in 1:length(reg_profit_monthly$beta)) {
month_graph[i,2] <- reg_profit_monthly$beta[i]
month_graph[i,3] <- reg_profit_monthly$cse[i]
}
time <- c(1, 10, 11, 12, 2, 3, 4, 5, 6, 7, 8, 9)
month_graph[,1] <- time
month_graph <- month_graph %>% mutate(upper = beta + 1.96*se ,
lower = beta - 1.96*se)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "Month", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("April", "May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=4.5, xmax=6.8, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
plot(profit_graph)
View(temp2)
summary(reg_profit_monthly)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "Month", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan", "Feb")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=4.5, xmax=6.8, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
plot(profit_graph)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "Month", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan", "Feb")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=3.5, xmax=5.8, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
plot(profit_graph)
ggsave(filename="profit_monthly.pdf", plot=month_profit, path = dir_save_fig)
ggsave(filename="profit_monthly.pdf", plot=profit_graph, path = dir_save_fig)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "May 2016 to Feb 2017)", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan", "Feb")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=3.5, xmax=5.8, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
ggsave(filename="profit_monthly.pdf", plot=profit_graph, path = dir_save_fig)
#graph from April to December - for first year only, to remove confounding effect of carry-on
profit_graph <- ggplot(month_graph %>% filter(time <11), aes(x=as.factor(time), y=beta)) +
geom_point() +
geom_line(aes(x=time, y=lower), linetype=2) +
geom_line(aes(x=time, y=upper), linetype=2) +
#geom_errorbar(aes(ymin=lower, ymax=upper), width=.2,
#               position=position_dodge(.9)) +
scale_x_discrete(name = "May 2016 to Feb 2017", breaks=c("1","2","3", "4", "5", "6", "7", "8", "9", "10"),
labels=c("May", "June", "July", "Aug", "Sept", "Oct", "Nov", "Dec", "Jan", "Feb")) +
scale_y_continuous(name="Treatment Effect on Profits", limits=c(NA, NA)) +
geom_rect(aes(xmin=3.5, xmax=5.8, ymin=-Inf, ymax=Inf), fill="blue", alpha=0.05) +
theme_bw()
ggsave(filename="profit_monthly.pdf", plot=profit_graph, path = dir_save_fig)
############ V-LookUp Creation for Matatu V2 #####################
# Created by: Greg & Erin
# Date created: 8/3/2018
# Purpose: Create V LookUp file for surveys
##################################################################
#Edited on August 19th to randomize order of each treatment arm
#Echo printed 35 pure control and control for the first day of the pilot, so updated
#the key numbers so we don't duplicate
#THIS IS ONLY PURE CONTROL AND CONTROL FOR THE PILOT STAGES
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, stringr)
#Notes: Keys will all be 5 digits.
# First digit must be 1, 5, or 9
# 1 = Pure Control, 5 = Control, 9 = Treatment
# Subsidy or not will just be random
#Create random order for treatment -----------------------------------------------------------------
set.seed(20180926) #Change the seed to todays date
# PARAMETERS TO CHANGE MAKE ------------------------------------------------------------------
batch_size <- 100 #number for new set of randomization
start <- 436 #This is the max of each group were printed previously (get this from echo or previous csv)
# CREATING RANDOMIZATION ORDER ------------------------------------------------------------------
# create the randomization order
order <- data.frame(infoLabel = sample(c("PureControl", "Control"), size = batch_size, replace=TRUE)) %>%
# get order overal so can resort
mutate(seq_across = seq_along(infoLabel)) %>%
# get order within group
group_by(infoLabel) %>%
mutate(seq_within = seq_along(infoLabel)) %>%
ungroup()
# grab maximum number for each group in the random ordering
max_pc <- as.numeric(max(order %>% filter(infoLabel =='PureControl') %>% select(seq_within)))
max_c <- as.numeric(max(order %>% filter(infoLabel =='Control') %>% select(seq_within)))
#max_t <- as.numeric(max(order %>% filter(infoLabel =='Treatment') %>% select(n)))
# CREATING KEYS FOR PAMPHLETS ------------------------------------------------------------------
pc_keys <- seq(start + 10000, start + 10000 + max_pc -1 , 1)
c_keys <- seq(start + 50000, start + 50000 + max_c -1 , 1)
#treat <- seq(start + 90000, start + 90000 + max_t -1, 1)
# CREATE SUBSIDY RANDOMIZATION -----------------------------------------------------------------
pure_control <- data.frame(key = c(pc_keys)) %>%
mutate(rnum =runif(n=max_pc)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
control <- data.frame(key = c(c_keys)) %>%
mutate(rnum =runif(n=max_c)) %>%
arrange(rnum) %>%
mutate(seq = seq_along(rnum),
subsidy = as.numeric(seq <= max_pc/2)) %>%
arrange(key) %>%
select(-rnum, -seq)
# treat <- data.frame(key = c(treat)) %>%
#  mutate(rnum =runif(n=max_t)) %>%
#  arrange(rnum) %>%
#  mutate(seq = seq_along(rnum),
#         subsidy = as.numeric(seq <= max_pc/2)) %>%
#  arrange(key) %>%
# select(-rnum, -seq)
# ADD LABELS -------------------------------------------------------------------------------
#Make sure to modify 'sub_sacco' to choose subsidized sacco
#NOTE: For Pilot we will subsidize Trippin (3) since they were most cooperative in giving matatus
# Use these numbers to match to names for consistency with survey programming:
# SUB_SACCO	NAME_SUB_SACCO
# 0 =	NairobiG
# 1 =	Transafaris
# 2 =	Sasaline
# 3 =	Trippin
# 4	= ClassicLuxuryShuttle
keys <- bind_rows(pure_control, control) %>%  #removed 'treat'
# adding labels
mutate(info = ifelse(key < 20000, 0, ifelse(
key < 60000 & key > 49999, 1, 2)),
infoLabel = ifelse(info == 0, "PureControl", ifelse(
info==1, "Control", "Treatment"))) %>%
group_by(info) %>%
mutate(seq_within = seq_along(info)) %>%
# Chooses sacco to subsidize
mutate(sub_sacco = 3,
name_sub_sacco = ifelse(sub_sacco==0 & subsidy==1, "NairobiG",
ifelse(sub_sacco==1 & subsidy==1, "Transafaris",
ifelse(sub_sacco==2 & subsidy==1, "Sasaline",
ifelse(sub_sacco==3 & subsidy==1, "Trippin",
ifelse(sub_sacco==4 & subsidy==1, "ClassicLuxuryShuttle", ""))))))
# CREATING FINAL RANDOMIZATION LIST ------------------------------------------------------------------
# rawest form
random_list_tmp <- left_join(order, keys, by = c('infoLabel', 'seq_within'))
# for output
random_list_1 <- random_list_tmp %>% select(-seq_across, -seq_within)
#write_csv(keys, "~/Dropbox/Matatu_project_David_Fred/rct_docs/surveys/look_up/look_up_pilot.csv")
write_csv(random_list_1, paste0("~/Dropbox/Matatu_v3/rct_docs/surveys/look_up/" , "pilot_look_up_", start , "_" , start+batch_size, ".csv"))
#Load in loan repayment data for analysis
rm(list=setdiff(ls(), c("reg5", "reg6")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# winsor vars for regressions
loans %<>% mutate(savbalan = winsor(savbalan, trim=0.01), #winsorize the savings data
tranamount = winsor(tranamount, trim=0.01))
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
distress_treat = flood_distress * act_treatment_post,
flood_distress2 = ifelse(month <9 & year==2017, 0, flood_distress), #create other flood distress base var for reg that has zeros in pre-period
credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*act_treatment)
temp <- loans[1:1000,]
View(temp)
#pre-period
reg1 <- felm(miss_pay_behind ~ act_treatment  | month + year + activity1 + activity2 + district |
0 | hchyid,
data = loans %>% filter(eligible==1, pre_period==1))
#pre-period
reg1 <- felm(miss_pay_behind ~ act_treatment  | month + year + activity1 + activity2 + district |
0 | hchyid,
data = loans %>% filter(eligible==1, pre_period==1))
#post period
reg3 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post + act_treatment_post_flood + flooded + post_flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1))
#pre-period
reg1 <- felm(miss_pay_behind ~ act_treatment  | month + year + activity1 + activity2 + district |
0 | hchyid,
data = loans %>% filter(eligible==1, pre_period==1))
#post period
reg3 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post + act_treatment_post_flood + flooded + post_flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1))
#Add interaction for flood distress - GET RID OF THIS PER BETTY'S ADVICE
reg3a <- felm(miss_pay_behind ~  act_treatment + act_treatment_post + act_treatment_post_flood + flooded + post_flooded + distress_treat + flood_distress2  |
month  + activity1 + activity2 + district  | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg3a) #NOTE - this is only for 2017! because only have reliable distress data for this year
#Loan Repayment Results
repayment <- stargazer(reg1, reg3,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.labels   = c("Pre-Period", "All Periods"),
column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Post Period x Treatment", "Post x Treat x Flood",
"Flood", "Flood x Post"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year \\& Month F.E.", "Yes", "Yes", "Yes"),
c("District F.E.", "Yes", "Yes", "Yes"),
c("Mean of Dep. Var.", "0.087", "0.096", "0.106"),
c("Unique Borrowers", "108,446", "109,647", "75,477")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. Column 1 uses observations only from the pre-flood period in both 2016 and 2017. Column 2 uses all observations. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}}",
notes.append = FALSE,
notes.align = "l")
#Loan Repayment Results
repayment <- stargazer(reg1, reg3,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.labels   = c("Pre-Period", "All Periods"),
column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Post Period x Treatment", "Post x Treat x Flood",
"Flood", "Flood x Post"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year \\& Month F.E.", "Yes", "Yes", "Yes"),
c("District F.E.", "Yes", "Yes", "Yes"),
c("Mean of Dep. Var.", "0.087", "0.096", "0.106"),
c("Unique Borrowers", "108,446", "109,647", "75,477")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. Column 1 uses observations only from the pre-flood period in both 2016 and 2017. Column 2 uses all observations. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. Column 1 uses observations only from the pre-flood period in both 2016 and 2017. Column 2 uses all observations. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}"
repayment[grepl("Note", repayment)] <- "" #replace note with blank
repayment[grepl("end\\{tabular\\}",repayment)] <- caption
cat(repayment, sep = '\n', file=paste0(dir_save, 'repayment.tex')) #write output
#Loan Repayment Results
repayment2 <- stargazer(reg3,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.labels   = c("All Periods"),
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Post Period x Treatment", "Post x Treat x Flood",
"Flood", "Flood x Post"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year \\& Month F.E.", "Yes", "Yes"),
c("District F.E.", "Yes", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.106"),
c("Unique Borrowers", "109,647", "75,477")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. Column 1 uses observations only from the pre-flood period in both 2016 and 2017. Column 2 uses all observations. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}"
repayment2[grepl("Note", repayment2)] <- "" #replace note with blank
repayment2[grepl("end\\{tabular\\}",repayment2)] <- caption
cat(repayment2, sep = '\n', file=paste0(dir_save, 'repayment_post.tex')) #write output
loans %<>% mutate(treat_flood = flooded*act_treatment)
#post period
reg3 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post + act_treatment_post_flood + flooded + post_flooded + treat_flood |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg3)
#post period
reg3 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post + act_treatment_post_flood + flooded + post_flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1))
summary(reg3)
#post period
reg3 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post + act_treatment_post_flood + flooded + post_flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg3)
#post period only
reg8 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood + flooded + post_flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg8)
#post period only
reg8 <- felm(miss_pay_behind ~ act_treatment + act_treatment_post_flood + flooded |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1, post_period==1))
summary(reg8)
#Loan Repayment Results
repayment2 <- stargazer(reg8,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.labels   = c("All Periods"),
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year \\& Month F.E.", "Yes", "Yes"),
c("District F.E.", "Yes", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.106"),
c("Unique Borrowers", "109,647", "75,477")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. Column 1 uses observations only from the pre-flood period in both 2016 and 2017. Column 2 uses all observations. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The post period is defined as any time after an observed flood or from September to March in non-flooded branches.}"
repayment2[grepl("Note", repayment2)] <- "" #replace note with blank
repayment2[grepl("end\\{tabular\\}",repayment2)] <- caption
cat(repayment2, sep = '\n', file=paste0(dir_save, 'repayment_post.tex')) #write output
cat(repayment2, sep = '\n', file=paste0(dir_save, 'repayment_post.tex')) #write output
#Loan Repayment Results
repayment2 <- stargazer(reg8,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.labels   = c("All Periods"),
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year \\& Month F.E.", "Yes", "Yes"),
c("District F.E.", "Yes", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.106"),
c("Unique Borrowers", "109,647", "75,477")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment2[grepl("Note", repayment2)] <- "" #replace note with blank
repayment2[grepl("end\\{tabular\\}",repayment2)] <- caption
cat(repayment2, sep = '\n', file=paste0(dir_save, 'repayment_post.tex')) #write output
#Loan Repayment Results
repayment2 <- stargazer(reg8,
header = FALSE,
title = "Repayment by Emergency Loan Availability",
label = "tbl:repay",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
column.separate = c(1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat x Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(c("Year \\& Month F.E.", "Yes", "Yes"),
c("District F.E.", "Yes", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.106"),
c("Unique Borrowers", "109,647", "75,477")),
notes = "\\parbox[t]{8cm}{\\emph{Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample includes only Emergency Loan eligible clients. Standard errors clustered at branch level. Observations at the loan-month level. The outcome variable is an indicator for whether or not the client missed a loan payment in a given month. The variable flood is an indicator for anytime after a flood until the following March.}"
repayment2[grepl("Note", repayment2)] <- "" #replace note with blank
repayment2[grepl("end\\{tabular\\}",repayment2)] <- caption
cat(repayment2, sep = '\n', file=paste0(dir_save, 'repayment_post.tex')) #write output
rmarkdown::render_site()
setwd("~/Website/gregorylane.github.io")
rmarkdown::render_site()
