#merge floods
disburse <- merge(disburse, floods, by = c("hchyid", "year_disb"), all.x=TRUE)
names(disburse)
#Create indicator for new person observed only in 2017
disburse %<>% mutate(disb_2017 = if_else(year_disb==2017 & loan_taken==1, 1, 0),
disb_2016 = if_else(year_disb==2016 & loan_taken==1, 1, 0),
disb_2015 = if_else(year_disb==2015 & loan_taken==1, 1, 0),
flood_2016 = if_else(year_disb==2016 & flooded==1, 1, 0))
disburse2 <- disburse %>% group_by(hchyid, orgno, orgmemno) %>%
summarise(disb_2015 = max(disb_2015, na.rm=T),
disb_2016 = max(disb_2016, na.rm=T),
disb_2017 = max(disb_2017, na.rm=T),
treatment = max(treatment, na.rm=T),
eligible = max(eligible, na.rm=T),
district = max(district, na.rm=T),
flood_2016 = max(flood_2016, na.rm=T))
#regression
reg1  <- felm(new_client ~ treatment |
district | 0 | hchyid,
data = disburse2)
disburse2 %<>% mutate(new_client = as.numeric(disb_2017==1 & disb_2016==0 & disb_2015==0)) %>%
filter(disb_2017==1 | disb_2016==1 | disb_2015==1)
disburse2 %<>% mutate(new_client = as.numeric(disb_2017==1 & disb_2016==0 & disb_2015==0),
treat_flood = treatment * flood_2016) %>%
filter(disb_2017==1 | disb_2016==1 | disb_2015==1)
#regression
reg1  <- felm(new_client ~ treatment |
district | 0 | hchyid,
data = disburse2)
summary(reg1)
reg2 <- felm(new_client ~ treatment + treat_flood + flood_2016 |
district | 0 | hchyid,
data = disburse2)
summary(reg2)
new_loan <- stargazer(reg1, reg2,
header = FALSE,
title = "New Individual Observation in 2017",
label = "tbl:new_client",
table.placement = "p",
dep.var.caption = "",
dep.var.labels  = "New Observation 2017",
#column.labels   = c("Pre-Period", "All Periods"),
#column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat X 2016 Flood", "Flood 2016"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes"),
c("Mean of Dep. Var.", "0.11")),
notes = "\\parbox[t]{8cm}{\\emph{Sample is comprised all BRAC clients that I observe. Data is pooled from both the 2016 and 2017. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample is comprised all BRAC clients that had loan activity in the data. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}"
new_loan[grepl("Note", new_loan)] <- "" #replace note with blank
new_loan[grepl("end\\{tabular\\}", new_loan)] <- caption
cat(new_loan, sep = '\n', file=paste0(dir_save, 'new_loan.tex')) #write output
new_loan <- stargazer(reg1, reg2,
header = FALSE,
title = "New Individual Observation in 2017",
label = "tbl:new_client",
table.placement = "p",
dep.var.caption = "",
dep.var.labels  = "New Observation 2017",
#column.labels   = c("Pre-Period", "All Periods"),
#column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat X 2016 Flood", "Flood 2016"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes"),
c("Mean of Dep. Var.", "0.11", "0.11")),
notes = "\\parbox[t]{8cm}{\\emph{Sample is comprised all BRAC clients that I observe. Data is pooled from both the 2016 and 2017. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample is comprised all BRAC clients that had loan activity in the data. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}"
new_loan[grepl("Note", new_loan)] <- "" #replace note with blank
new_loan[grepl("end\\{tabular\\}", new_loan)] <- caption
cat(new_loan, sep = '\n', file=paste0(dir_save, 'new_loan.tex')) #write output
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
act_treatment_post_flood = act_treatment * post_period * flooded,
new_client_treat = new_client*act_treatment)
new_client_list <- select(disburse2, hchyid, orgno, orgmemno, new_client)
rm(list=setdiff(ls(), c("new_client_list")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander, ri2) #ri2 is for randomization inference p-values
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
load(paste0(dir_data, "analysis_loan_data.RData"))
# merge new client list
loans <- merge(loans, new_client_list, by = c("hchyid", "orgno", "orgmemno"), all.x=TRUE)
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
act_treatment_post_flood = act_treatment * post_period * flooded,
new_client_treat = new_client*act_treatment)
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood +  flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood +  flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
summary(reg_misspay_new_cl)
# make treatment interactions
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
act_treatment_post_flood = act_treatment * post_period * flooded,
new_client_treat = new_client*act_treatment,
new_client_treat_flood = new_client_treat*flooded,
new_client_flood = new_client*flooded)
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood + new_client_treat_flood + new_client_flood +
flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood + new_client_treat_flood + new_client_flood +
flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
summary(reg_misspay_new_cl)
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
reg_misspay_new_cl2 <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood + new_client_treat_flood + new_client_flood +
flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
summary(reg_misspay_new_cl)
summary(reg_misspay_new_cl2)
#create outcome table
miss_pay_new <- stargazer(reg_misspay_new_cl, reg_misspay_new_cl2,
header = FALSE,
title = "Miss Payment by New Clients",
label = "tbl:miss_pay_new_client",
table.placement = "p",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
#column.labels   = c("Pre-Period", "All Periods"),
#column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat X New Client", "New Client",
"Treat X Flood", "New X Treat X Flood", "New X Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.096")),
notes = "\\parbox[t]{8cm}{\\emph{Data is pooled from both the 2016 and 2017. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the client missed a loan payment in the given month. The variable flood is an indicator for whether the branch was flooded in a given year. The variable new client indicates whether a borrower is first observed in 2017.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample is comprised all BRAC clients that had loan activity in the data. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}"
miss_pay_new[grepl("Note", miss_pay_new)] <- "" #replace note with blank
miss_pay_new[grepl("end\\{tabular\\}", miss_pay_new)] <- caption
cat(miss_pay_new, sep = '\n', file=paste0(dir_save, 'miss_pay_new_client.tex')) #write output
# make treatment interactions
loans %<>% mutate(new_client = ifelse(is.na(new_client), 0, new_client))
loans %<>% mutate(act_treatment_post = act_treatment * post_period,
act_treatment_post_flood = act_treatment * post_period * flooded,
act_treatment_post_flood = act_treatment * post_period * flooded,
new_client_treat = new_client*act_treatment,
new_client_treat_flood = new_client_treat*flooded,
new_client_flood = new_client*flooded)
#regressions with new client interactions on missed payments
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
summary(reg_misspay_new_cl)
reg_misspay_new_cl2 <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood + new_client_treat_flood + new_client_flood +
flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter(eligible==1 & post_period==1))
summary(reg_misspay_new_cl2)
#create outcome table
miss_pay_new <- stargazer(reg_misspay_new_cl, reg_misspay_new_cl2,
header = FALSE,
title = "Miss Payment by New Clients",
label = "tbl:miss_pay_new_client",
table.placement = "p",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
#column.labels   = c("Pre-Period", "All Periods"),
#column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat X New Client", "New Client",
"Treat X Flood", "New X Treat X Flood", "New X Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.096")),
notes = "\\parbox[t]{8cm}{\\emph{Data is pooled from both the 2016 and 2017. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the client missed a loan payment in the given month. The variable flood is an indicator for whether the branch was flooded in a given year. The variable new client indicates whether a borrower is first observed in 2017.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample is comprised all BRAC clients that had loan activity in the data. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}"
miss_pay_new[grepl("Note", miss_pay_new)] <- "" #replace note with blank
miss_pay_new[grepl("end\\{tabular\\}", miss_pay_new)] <- caption
cat(miss_pay_new, sep = '\n', file=paste0(dir_save, 'miss_pay_new_client.tex')) #write output
#create outcome table
miss_pay_new <- stargazer(reg_misspay_new_cl, reg_misspay_new_cl2,
header = FALSE,
title = "Missed Payments by New Clients",
label = "tbl:miss_pay_new_client",
table.placement = "p",
dep.var.caption = "",
dep.var.labels  = "Missed Payment",
#column.labels   = c("Pre-Period", "All Periods"),
#column.separate = c(1, 1),
#model.numbers = FALSE,
digits = 3,
digits.extra = 2,
covariate.labels = c("Treatment", "Treat X New Client", "New Client",
"Treat X Flood", "New X Treat X Flood", "New X Flood",
"Flood"),
omit.stat = c("rsq", "ser" ,"f", "adj.rsq", "res.dev"),
add.lines = list(
#c("District F.E.", "Yes"),
c("Mean of Dep. Var.", "0.096", "0.096")),
notes = "\\parbox[t]{8cm}{\\emph{Data is pooled from both the 2016 and 2017. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the client missed a loan payment in the given month. The variable flood is an indicator for whether the branch was flooded in a given year. The variable new client indicates whether a borrower is first observed in 2017.}}",
notes.append = FALSE,
notes.align = "l")
caption <- "\\end{tabular} \n \\caption*{\\raggedright \\footnotesize \\textbf{Notes:} Sample is comprised all BRAC clients that had loan activity in the data. Standard errors clustered at branch level. The outcome variable is an indicator for whether or not the first observed loan activity is in the second year of the experiment}"
miss_pay_new[grepl("Note", miss_pay_new)] <- "" #replace note with blank
miss_pay_new[grepl("end\\{tabular\\}", miss_pay_new)] <- caption
cat(miss_pay_new, sep = '\n', file=paste0(dir_save, 'miss_pay_new_client.tex')) #write output
#regressions with new client interactions on missed payments
reg_misspay_new_cl <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter( post_period==1))
summary(reg_misspay_new_cl)
reg_misspay_new_cl2 <- felm(miss_pay_behind ~ act_treatment + new_client_treat + new_client +
act_treatment_post_flood + new_client_treat_flood + new_client_flood +
flooded  |
month + year + activity1 + activity2 + district | 0 | hchyid,
data = loans %>% filter( post_period==1))
summary(reg_misspay_new_cl2)
table(loans$new_client, loans$el_eligible)
temp <- loans %>% filter(el_eligible==1)
temp <- loans %>% filter(eligible==1)
summary(temp$new_client)
summary(loans$new_client)
# setup ----------------------------------------------------------------------
rm(list=setdiff(ls(), c("reg5", "reg6", "reg7")))
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander, ri2) #ri2 is for randomization inference p-values
# Lubridate Adds easy date sytax, padr for date manipulation
# psych add winsor command
#have stupid ludbridate read so don't get error
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
dir_save <- '~/Dropbox/Berkeley/Bangladesh/Papers/tables/'
dir_save_fig <- '~/Dropbox/Berkeley/Bangladesh/Papers/figures/'
# read data
load(paste0(dir_data, "analysis_loan_data.RData"))
#generate profit info
int_rate <- 0.005 #monthly cost of outstanding loans (6% annual interest)
loans %<>% mutate(year_disb = year(disbdate),
month_disb = month(disbdate),
t = ifelse(year == year_disb, month - month_disb, month + 12 - month_disb),
profit = totcolc/(1+int_rate)^t)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year = min(year, na.rm=TRUE),
month = min(month, na.rm=TRUE)) %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
temp %<>% mutate(profit = revenue - cost)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg_profit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1 + paid_before  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1 + paid_before  | 0 | hchyid, data = temp %>% filter(credit_score < 95))
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1 + activity2 | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1  | 0 | hchyid, data = temp%>% filter(credit_score < 95) )
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1  | 0 | hchyid, data = temp%>% filter(credit_score < 97) )
summary(reg_profit_credit)
a
summary(reg_profit)
#summarise to branch - month level to account for extra loans being given
#NOTE: for branch level profits keep full sample, not just eligible
temp2 <- loans %>% filter(((year>=2016 & month >= 4) | year >=2017),
projectcode==15, lnstatus_end!=0) %>%
group_by(id, month, year) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2)) %>%
ungroup() %>%
group_by(hchyid, month, year) %>%
summarise(miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(revenue, na.rm=TRUE),
cost = mean(cost, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
credit_score = mean(credit_score, na.rm=TRUE),
num_members = n()) %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment)
temp2 %<>% mutate(profit = revenue - cost)
reg_profit2 <- felm(profit ~ treatment |  month + district  | 0 | hchyid, data = temp2)
summary(reg_profit2)
temp2 %<>% mutate(profit2 = profit / num_members)
reg_profit3 <- felm(profit2 ~ treatment  | month + district | 0 | hchyid, data = temp2)
summary(reg_profit3)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score2 | month + district | 0 | hchyid, data = temp2)
summary(reg_profit3_credit)
summary(temp2$credit_score)
summary(temp2$credit_score2)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score | month + district | 0 | hchyid, data = temp2)
summary(reg_profit3_credit)
temp2 %<>% mutate(profit = revenue - cost) %>%
ungroup() %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment)
temp2 %<>% mutate(profit2 = profit / num_members)
reg_profit3 <- felm(profit2 ~ treatment  | month + district | 0 | hchyid, data = temp2)
summary(reg_profit3)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score | month + district | 0 | hchyid, data = temp2)
summary(reg_profit3_credit)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score | month + district | 0 | hchyid + activity1 +activity2, data = temp2)
summary(reg_profit3_credit)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score | month + district | 0 | hchyid, data = temp2 %>% filter(credit_score < 95))
summary(reg_profit3_credit)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score | month + district + activity1 + paid_before | 0 | hchyid, data = temp2)
reg_profit3_credit <- felm(profit2 ~ treatment + score_treat + credit_score | month + district + activity1  | 0 | hchyid, data = temp2)
summary(reg_profit3_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
names(loans)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year = min(year, na.rm=TRUE),
month = min(month, na.rm=TRUE)) %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment) %>%
ungroup() %>% group_by(hchyid, month, year) %>%
mutate(num_members = count(id))
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year = min(year, na.rm=TRUE),
month = min(month, na.rm=TRUE)) %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment) %>%
ungroup() %>% group_by(hchyid, month, year) %>%
mutate(num_members = n())
head(temp$num_members)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
temp %<>% mutate(profit = revenue - cost)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg_profit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + num_members  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity  | 0 | hchyid, data = temp)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year = min(year, na.rm=TRUE),
month = min(month, na.rm=TRUE)) %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
temp %<>% mutate(profit = revenue - cost)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg_profit)
summary(reg_profit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1 + paid_before | 0 | hchyid, data = temp %>% filter(credit_score < 95))
summary(reg_profit_credit)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year = min(year, na.rm=TRUE),
month = min(month, na.rm=TRUE)) %>%
mutate(credit_score2 = credit_score - mean(credit_score, na.rm=TRUE),
score_treat = credit_score2*treatment)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
temp %<>% mutate(profit = revenue - cost)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
reg_profit <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg_profit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + paid_before  | 0 | hchyid, data = temp)
summary(reg_profit_credit)
reg_profit <- felm(profit ~ treatment  | district + paid_before | 0 | hchyid, data = temp)
summary(reg_profit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1 + paid_before | 0 | hchyid, data = temp %>% filter(credit_score < 95))
summary(reg_profit_credit)
reg_profit_credit <- felm(profit ~ treatment + score_treat + credit_score2  | district + activity1 + paid_before | 0 | hchyid, data = temp)
summary(reg_profit_credit)
pnorm(0, 0, 1)
pnorm(0.07, 0, 1)
pnorm(1.96, 0, 1)
setwd("~/Library/CloudStorage/Dropbox/Mac/Documents/Website/gregorylane.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
