annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
#Good Loan
#Eligible
ggplot(aes(x = date, y=took_gl, color = as.factor(treatment)) )+
#geom_line(good_loan2 %>% filter(el_eligible==1, date < 2016.9), aes(x = date, y=took_gl)) +
#geom_line(good_loan2 %>% filter(el_eligible==1, date > 2017.16), aes(x = date, y=took_gl)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
l
#Good Loan
#Eligible
ggplot(good_loan2 %>% filter(el_eligible==1), aes(x = date, y=took_gl, color = as.factor(treatment)) )+
#geom_line(good_loan2 %>% filter(el_eligible==1, date < 2016.9), aes(x = date, y=took_gl)) +
#geom_line(good_loan2 %>% filter(el_eligible==1, date > 2017.16), aes(x = date, y=took_gl)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
#Good Loan
#Eligible
ggplot(good_loan2 %>% filter(el_eligible==1), aes(x = date, y=took_gl, color = as.factor(treatment)) )+
geom_line( aes(x = date, y=took_gl)) +
#geom_line(good_loan2 %>% filter(el_eligible==1, date > 2017.16), aes(x = date, y=took_gl)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
#Good Loan
#Eligible
ggplot(good_loan2 %>% filter(el_eligible==1), aes(x = date, y=took_gl, color = as.factor(treatment)) )+
geom_line(data=good_loan2 %>% filter(el_eligible==1, date < 2016.9), aes(x = date, y=took_gl)) +
#geom_line(good_loan2 %>% filter(el_eligible==1, date > 2017.16), aes(x = date, y=took_gl)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
#Good Loan
#Eligible
ggplot(good_loan2 %>% filter(el_eligible==1), aes(x = date, y=took_gl, color = as.factor(treatment)) )+
geom_line(data=good_loan2 %>% filter(el_eligible==1, date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data=good_loan2 %>% filter(el_eligible==1, date > 2017.16), aes(x = date, y=took_gl)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
ggsave("~/Dropbox/Berkeley/Bangladesh/Papers/figures/prob_take_good_loan.jpeg")
ggplot(good_loan2 %>% filter(el_eligible==0), aes(x = date, y=took_gl, color = as.factor(treatment)) )+
geom_line() +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
ggplot(good_loan2 %>% filter(el_eligible==0), aes(x = date, y=took_gl, color = as.factor(treatment)) )+
geom_line(data=good_loan2 %>% filter(el_eligible==0, date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data=good_loan2 %>% filter(el_eligible==0, date > 2017.16), aes(x = date, y=took_gl)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.42, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.42, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Good Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2016, 2017)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
ggsave("~/Dropbox/Berkeley/Bangladesh/Papers/figures/prob_take_good_loan_inelig.jpeg")
##Dabi Loans
#Eligible
ggplot(disburse3 %>% filter(date < 2017.9), aes(x = date, y=prob_take, color = as.factor(treatment)) )+
geom_line() +
annotate("rect", xmin = 2016.45, xmax = 2016.9, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.8, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.9, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.8, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
ggsave("~/Dropbox/Berkeley/Bangladesh/Papers/figures/prob_take_loan.jpeg")
#Ineligible
temp <- disburse4 %>% filter(el_eligible==0)
ggplot(temp %>% filter(date < 2017.9), aes(x = date, y=prob_take, color = as.factor(treatment)) )+
geom_line() +
annotate("rect", xmin = 2016.45, xmax = 2016.9, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.8, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.9, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.8, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018)) +
scale_color_manual(values=c("#525252", "#0570b0"),
name="Treatment Status",
labels=c("Control", "Treatment"))
ggsave("~/Dropbox/Berkeley/Bangladesh/Papers/figures/prob_take_loan_noelig.jpeg")
ggplot(data2, aes(x = date, y=prob_take, color = as.factor(treatment), linetype = Loan_Type) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, linetype = Loan_Type) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggsave("~/Dropbox/Berkeley/Bangladesh/Papers/figures/all_loans_uptake.jpeg")
data2 %<>% mutate("Loan Type" = ifelse(dabi==1, " Dabi",
# ifelse(dabi==1 & treatment==1, 2,
ifelse(good_loan==1, " Good Loan", "Emergency Loan")))
ggplot(data2, aes(x = date, y=prob_take, linetype = "Loan_Type") )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, linetype = "Loan Type") )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
View(data2)
ggplot(data2, aes(x = date, y=prob_take, linetype = Loan Type) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, _linetype = Loan Type) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, linetype = c(Loan Type)) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, linetype = c("Loan Type")) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, linetype = data2$`Loan Type`) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggplot(data2, aes(x = date, y=prob_take, linetype = `Loan Type`) )+
geom_line(data = data2 %>% filter(!is.na(prob_take), date < 2018)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date < 2016.9), aes(x = date, y=took_gl)) +
geom_line(data = data2 %>% filter(!is.na(took_gl), date > 2017.16), aes(x = date, y=took_gl)) +
#geom_line(data = data2 %>% filter(!is.na(took_gl)), aes(x = date, y=took_gl), linetype = "dashed") +
geom_line(data = data2 %>% filter(!is.na(em_loan_prob), date > 2016.4 & date <2017.95), aes(x = date, y=em_loan_prob)) +
annotate("rect", xmin = 2016.45, xmax = 2016.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
annotate("rect", xmin = 2017.45, xmax = 2017.85, ymin = -Inf, ymax = Inf,
alpha = .2) +
geom_vline(xintercept = 2016.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2016.85, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.45, color = "#e31a1c", linetype ="dashed")+
geom_vline(xintercept = 2017.85, color = "#e31a1c", linetype ="dashed")+
theme_pander() +
labs(y = "Probability Loan Taken" , x = "Date") +
scale_x_continuous(breaks = c(2015, 2016, 2017, 2018))
ggsave("~/Dropbox/Berkeley/Bangladesh/Papers/figures/all_loans_uptake.jpeg")
# setup ----------------------------------------------------------------------
rm(list = ls())
library(pacman)
p_load(data.table, foreign, tidyverse, magrittr, lubridate, readstata13, readxl, stringr, lfe, psych,
stargazer, pander)
# Lubridate Adds easy date sytax, padr for date manipulation
# psych add winsor command
#have stupid ludbridate read so don't get error
temp <- ymd_hms("2017-01-01 00:20:10")
rm(temp)
dir_data <- "~/Dropbox/Berkeley/Bangladesh/Data Modifed/Loan Data/"
# read data
load(paste0(dir_data, "analysis_loan_data.RData"))
#generate profit info
int_rate <- 0.005 #monthly cost of outstanding loans
loans %<>% mutate(year_disb = year(disbdate),
month_disb = month(disbdate),
t = ifelse(year == year_disb, month - month_disb, month + 12 - month_disb),
profit = totcolc/(1+int_rate)^t)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2))
temp %<>% mutate(profit = revenue - cost)
temp %<>% mutate(profit = revenue - cost + paid_before)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017))
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year=min(year),
month = min(month))
temp %<>% mutate(profit = revenue - cost)
temp %<>% mutate(profit = revenue - cost + paid_before)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
reg1 <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg1)
e
temp %<>% mutate(profit = revenue - cost)
#filter down to only data that comes from beginning of RCT and to loans that are completed
#(need to limit it to finished or late loans b/c treatment induces more loans, which have
#negative profit early in payment cycle):
temp <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
paid_before = max(actual_paid, na.rm=TRUE) - sum(totcolc, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year=min(year),
month = min(month))
temp %<>% mutate(profit = revenue - cost)
temp %<>% filter((year>=2016 & month >= 4) | year >=2017)
reg1 <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg1)
#summarise to branch - month level to account for extra loans being given
temp2 <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id, month) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2)) %>%
ungroup() %>%
group_by(hchyid, month) %>%
summarise(miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(revenue, na.rm=TRUE),
cost = mean(cost, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2))
temp2 %<>% filter((year>=2016 & month >= 4) | year >=2017),
temp2 %<>% mutate(profit = revenue - cost)
temp2 %<>% filter((year>=2016 & month >= 4) | year >=2017),
temp2 %<>% mutate(profit = revenue - cost)
temp2 %<>% filter((year>=2016 & month >= 4) | year >=2017)
#summarise to branch - month level to account for extra loans being given
temp2 <- loans %>% filter(projectcode==15, eligible==1, lnstatus_end!=0) %>%
group_by(id, month) %>%
summarise(hchyid = mean(hchyid, na.rm=TRUE),
miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
credit_score = mean(credit_score, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(profit, na.rm=TRUE),
cost = mean(principalamt, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year = mean(year, na.rm=TRUE)) %>%
ungroup() %>%
group_by(hchyid, month) %>%
summarise(miss_pay_behind = sum(miss_pay_behind, na.rm=TRUE),
treatment = mean(treatment, na.rm=TRUE),
flood_prep = mean(flood_prep, na.rm=TRUE),
flood_distress = mean(flood_distress, na.rm=TRUE),
district = first(district),
revenue = sum(revenue, na.rm=TRUE),
cost = mean(cost, na.rm=TRUE),
activity1 = first(activity1),
activity2 = first(activity2),
year=mean(year, na.rm=TRUE))
temp2 %<>% filter((year>=2016 & month >= 4) | year >=2017)
temp2 %<>% mutate(profit = revenue - cost)
reg_profit2 <- felm(profit ~ treatment  | district + month | 0 | hchyid, data = temp2)
summary(reg_profit2)
reg1 <- felm(profit ~ treatment  | district | 0 | hchyid, data = temp)
summary(reg1)
setwd("~/Website/gregorylane.github.io")
render_site()
rmarkdown::render_site()
